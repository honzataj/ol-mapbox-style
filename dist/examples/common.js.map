{"version":3,"file":"common.js","mappings":"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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/AssertionError.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/style/flat.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageBase.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    frameState.declutterTree = null;\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.5.0';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(spriteImage, spriteImageData, iconColor),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor\n                          );\n                        }\n                        imgSize = [img.width, img.height];\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1}\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return this.image_ ? this.image_.getImage() : null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = this.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStyleFunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","messages","constructor","code","message","super","Property","CollectionEvent","element","index","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","then","catch","error","ERROR","IDLE","LOADING","LOADED","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","changed","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","resolution","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","layers","renderDeclutter","declutterTree","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","getResolution","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","lastIndex","firstIndex","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","CHANGE","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","getState","extent","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","getProperties","assign","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromString","cache","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","Number","normalize","fromStringInternal_","asArray","asColorLike","levels","info","warn","level","console","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","clonedGeometries","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","Point","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","deflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","text","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","Text","font","maxAngle","placement","repeat","rotateWithView","textAlign","justify","textBaseline","backgroundFill","backgroundStroke","iconSrc","iconImg","Icon","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","RegularShape","radius","radius1","radius2","circleRadius","Circle","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","Promise","resolve","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","PRERENDER","POSTRENDER","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","reject","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","property","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getter","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","atan","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","RenderEvent","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","sharedData","getAnchor","origin","getOrigin","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","setLineDash","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","widthIndex","imageArgs","imageDeclutterBox","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","builderTypes","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","CanvasImmediateRenderer","VectorContext","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","setText","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","getRadius","getDisplacement","setRadius","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","initialOptions_","setScale","setAnchor","iconImageSize","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","static","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","expression","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","Scope","bindings","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","expected","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","expectedType","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","parsed","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","operator","interpolation","lower","upper","exponentialInterpolation","controlPoints","rest","interpolationFactor","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","needsAnnotation","firstImage","argCount","Let","binding","At","In","IndexOf","fromIndex","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","register","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","parser","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","getTransformedTilesUrl","tilesUrl","transformedRequest","tilejsonCache","getTileJson","glSource","cacheKey","promise","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","rules","cssRule","cssText","processedFontFamilies","getFonts","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","head","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","getIconDeclutterMode","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon","icon_cache_key","pattern","createPattern","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","dw","dh","previousAlpha","BaseImage","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageBase","error_","getError","handleLoad_","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","setResolutions","findNearestResolution","getImageInternal","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","empty","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","VectorTile","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","encodeURI","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}