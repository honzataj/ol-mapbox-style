{"version":3,"file":"common.js","mappings":"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,GAAKurD,EAASvrD,GAE7Bw/C,EAAa5+C,OAASytC,CACxB,CAEF,OAAOoR,CACT,CAgBO,SAAS+L,EACd3S,EACAt2C,EACAmkD,EACArY,EACAze,EACA07B,EACA5rD,EACAu2B,EACAupB,EACAC,EACA8L,GAEAA,EAAWA,GAAsB,CAACtoD,IAAKA,KACvC,IAAK,IAAIjD,EAAI,EAAGwF,EAAKkhD,EAAK9lD,OAAQZ,EAAIwF,IAAMxF,EAAG,CAC7C,MAAM+J,EAAM28C,EAAK1mD,GACjBy/C,EAAqB4L,EACnBxS,EACAt2C,EACAwH,EACAskC,EACAze,EACA07B,EACA5rD,EACAu2B,EACAupB,EACAC,EACA8L,GAEFhpD,EAASwH,CACX,CACA,OAAO01C,CACT,CAgBO,SAASgM,EACd5S,EACAt2C,EACAslD,EACAxZ,EACAze,EACA07B,EACA5rD,EACAu2B,EACAupB,EACAC,EACA8L,GAEAA,EAAWA,GAAsB,CAACtoD,IAAKA,KACvC,IAAK,IAAIjD,EAAI,EAAGwF,EAAKqiD,EAAMjnD,OAAQZ,EAAIwF,IAAMxF,EAAG,CAC9C,MAAM0mD,EAAOmB,EAAM7nD,GACnBy/C,EAAqB+L,EACnB3S,EACAt2C,EACAmkD,EACArY,EACAze,EACA07B,EACA5rD,EACAu2B,EACAupB,EACAC,EACA8L,GAEFhpD,EAASmkD,EAAKA,EAAK9lD,OAAS,EAC9B,CACA,OAAO6+C,CACT,0FClUO,SAASiM,EACd7S,EACAt2C,EACAwH,EACAskC,EACA56B,GAmBA,QAjBgB,QACdA,GAKA,SAAU6E,GACR,OAAQqzC,EACN9S,EACAt2C,EACAwH,EACAskC,EACA/1B,EAAW,GACXA,EAAW,GAEf,GAGJ,CAWO,SAASqzC,EACd9S,EACAt2C,EACAwH,EACAskC,EACA3uC,EACAu2B,GASA,IAAI21B,EAAK,EACLjgB,EAAKkN,EAAgB9uC,EAAMskC,GAC3BzC,EAAKiN,EAAgB9uC,EAAMskC,EAAS,GACxC,KAAO9rC,EAASwH,EAAKxH,GAAU8rC,EAAQ,CACrC,MAAMtuC,EAAK84C,EAAgBt2C,GACrBm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C9C,MAAM67E,EAAS,GACft5E,EAAS5D,KAAK48E,uBACZ1iC,EACAt2C,EACAslD,EAAM7nD,GACNquC,EACAwtC,GAEFD,EAAa31E,KAAK41E,EACpB,CACAl9E,KAAK07E,aAAap0E,KAAK,CACrB,KAAkB61E,OAClBH,EACAC,EACA5iE,EACAqhB,EACA,OAEF17B,KAAK47E,yBAAyBt0E,KAAK,CACjC,KAAkB61E,OAClBH,EACAC,EACA5iE,EACA47D,GAAwBv6C,EACxB,OAEF,MACF,IAAK,UACL,IAAK,kBACHmhD,EAAc,GACd3iC,EACU,WAAR9xC,EAC2D,EAErD2hD,6BACF1vC,EAASo1B,qBACf7rC,EAAS5D,KAAK48E,uBACZ1iC,EACA,EACuG,EAErGmO,UACF3Y,EACAmtC,GAEF78E,KAAK07E,aAAap0E,KAAK,CACrB,KAAkB61E,OAClBH,EACAH,EACAxiE,EACAqhB,EACA,OAEF17B,KAAK47E,yBAAyBt0E,KAAK,CACjC,KAAkB61E,OAClBH,EACAH,EACAxiE,EACA47D,GAAwBv6C,EACxB,OAEF,MACF,IAAK,aACL,IAAK,SACHwe,EAAkB7/B,EAASo1B,qBAC3BqtC,EAAa98E,KAAKm8E,0BAChBjiC,EACA,EACAA,EAAgBj4C,OAChBytC,GACA,GACA,GAEF1vC,KAAK07E,aAAap0E,KAAK,CACrB,KAAkB61E,OAClBH,EACAF,EACAziE,EACAqhB,EACA,OAEF17B,KAAK47E,yBAAyBt0E,KAAK,CACjC,KAAkB61E,OAClBH,EACAF,EACAziE,EACA47D,GAAwBv6C,EACxB,OAEF,MACF,IAAK,aACHwe,EAAkB7/B,EAASo1B,qBAC3BqtC,EAAa98E,KAAKg8E,2BAA2B9hC,EAAiBxK,GAE1DotC,EAAaE,IACfh9E,KAAK07E,aAAap0E,KAAK,CACrB,KAAkB61E,OAClBH,EACAF,EACAziE,EACAqhB,EACA,OAEF17B,KAAK47E,yBAAyBt0E,KAAK,CACjC,KAAkB61E,OAClBH,EACAF,EACAziE,EACA47D,GAAwBv6C,EACxB,QAGJ,MACF,IAAK,QACHwe,EAAkB7/B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mBzB,EACf9C,GACE7zG,EACA,QACA,gBACAqO,EACA3mB,EACAsmH,EACA9R,GAEF,EACAmc,EAAoBrD,GACxBnB,GACE7zG,EACA,QACA,sBACAqO,EACA3mB,EACAsmH,EACA9R,GAEF2X,GACE7zG,EACA,QACA,wBACAqO,EACA3mB,EACAsmH,EACA9R,IAGEoc,EAActD,GAClBnB,GACE7zG,EACA,QACA,eACAqO,EACA3mB,EACAsmH,EACA9R,GAEF2X,GACE7zG,EACA,QACA,iBACAqO,EACA3mB,EACAsmH,EACA9R,IAGEqc,EAAoB1E,GACxB7zG,EACA,QACA,sBACAqO,EACA3mB,EACAsmH,EACA9R,GAEIsc,EACJJ,EACA,IACAC,EACA,IACAC,EACA,IACAC,EACFnB,EAAUlB,EAAesC,GACpBpB,IACHA,EAAU,IAAIvyD,EAAA,EAAO,CACnBR,OAAQ+zD,EACR/yD,OACEgzD,GAAqBE,EAAoB,EACrC,IAAIvyD,EAAA,EAAO,CACTnjD,MAAO01G,EACPv/E,MAAOq/E,SAET12G,EACNyjD,KAAMkzD,EACF,IAAI9yD,EAAA,EAAK,CACPxsB,MAAOs/E,SAET32G,EACJiiD,cAAe,SAEjBsyD,EAAesC,GAAapB,GAE9B7qH,EAAMiQ,SAAS46G,GACft2D,EAAOv0D,EAAMgqF,UACbhqF,EAAMy0D,aAAQr/C,GACdpV,EAAM84C,iBAAY1jC,GAClBpV,EAAMmtD,UAAU/gD,GAChB8+G,GAAW,CACb,CAGA,GAAI,eAAgB7qE,EAAQ,CAC1B2qE,EAAWrwH,KAAKM,MACdqsH,GACE7zG,EACA,SACA,YACAqO,EACA3mB,EACAsmH,EACA9R,IAGJ,MAAMuc,EAAY5E,GAChB7zG,EACA,SACA,YACAqO,EACA3mB,EACAsmH,EACA9R,GAEFob,EAAiBzD,GACf7zG,EACA,SACA,mBACAqO,EACA3mB,EACAsmH,EACA9R,GAEF98B,EAAO,GACLwzC,EACIA,EACE6F,EACA1K,EAAQO,SAAWP,EAAQO,SAAS,oBAAiB3sG,GAEvD82G,EACJlB,EACAD,GAEGl4C,EAAKjhC,SAAS,gBACjBihC,GAA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","sources":["webpack://ol-mapbox-style/webpack/runtime/chunk loaded","webpack://ol-mapbox-style/./node_modules/@mapbox/unitbezier/index.js","webpack://ol-mapbox-style/./node_modules/csscolorparser/csscolorparser.js","webpack://ol-mapbox-style/./node_modules/ieee754/index.js","webpack://ol-mapbox-style/./node_modules/mapbox-to-css-font/index.js","webpack://ol-mapbox-style/./node_modules/nanoassert/index.js","webpack://ol-mapbox-style/./node_modules/pbf/index.js","webpack://ol-mapbox-style/./node_modules/rbush/rbush.min.js","webpack://ol-mapbox-style/./node_modules/ol/AssertionError.js","webpack://ol-mapbox-style/./node_modules/ol/Collection.js","webpack://ol-mapbox-style/./node_modules/ol/CollectionEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Disposable.js","webpack://ol-mapbox-style/./node_modules/ol/Image.js","webpack://ol-mapbox-style/./node_modules/ol/ImageState.js","webpack://ol-mapbox-style/./node_modules/ol/ImageTile.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Map.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Composite.js","webpack://ol-mapbox-style/./node_modules/ol/MapEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEvent.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventType.js","webpack://ol-mapbox-style/./node_modules/ol/pointer/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-mapbox-style/./node_modules/ol/MapEventType.js","webpack://ol-mapbox-style/./node_modules/ol/MapProperty.js","webpack://ol-mapbox-style/./node_modules/ol/control/Control.js","webpack://ol-mapbox-style/./node_modules/ol/control/Attribution.js","webpack://ol-mapbox-style/./node_modules/ol/control/Rotate.js","webpack://ol-mapbox-style/./node_modules/ol/control/Zoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Property.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Interaction.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/Pointer.js","webpack://ol-mapbox-style/./node_modules/ol/events/condition.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragRotate.js","webpack://ol-mapbox-style/./node_modules/ol/render/Box.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragBox.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/DragZoom.js","webpack://ol-mapbox-style/./node_modules/ol/events/Key.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-mapbox-style/./node_modules/ol/Map.js","webpack://ol-mapbox-style/./node_modules/ol/control/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/interaction/defaults.js","webpack://ol-mapbox-style/./node_modules/ol/Kinetic.js","webpack://ol-mapbox-style/./node_modules/ol/Object.js","webpack://ol-mapbox-style/./node_modules/ol/ObjectEventType.js","webpack://ol-mapbox-style/./node_modules/ol/Observable.js","webpack://ol-mapbox-style/./node_modules/ol/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileQueue.js","webpack://ol-mapbox-style/./node_modules/ol/TileRange.js","webpack://ol-mapbox-style/./node_modules/ol/TileState.js","webpack://ol-mapbox-style/./node_modules/ol/ViewProperty.js","webpack://ol-mapbox-style/./node_modules/ol/centerconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/resolutionconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/View.js","webpack://ol-mapbox-style/./node_modules/ol/ViewHint.js","webpack://ol-mapbox-style/./node_modules/ol/array.js","webpack://ol-mapbox-style/./node_modules/ol/asserts.js","webpack://ol-mapbox-style/./node_modules/ol/color.js","webpack://ol-mapbox-style/./node_modules/ol/colorlike.js","webpack://ol-mapbox-style/./node_modules/ol/console.js","webpack://ol-mapbox-style/./node_modules/ol/coordinate.js","webpack://ol-mapbox-style/./node_modules/ol/css.js","webpack://ol-mapbox-style/./node_modules/ol/dom.js","webpack://ol-mapbox-style/./node_modules/ol/easing.js","webpack://ol-mapbox-style/./node_modules/ol/events.js","webpack://ol-mapbox-style/./node_modules/ol/events/Event.js","webpack://ol-mapbox-style/./node_modules/ol/events/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/events/Target.js","webpack://ol-mapbox-style/./node_modules/ol/extent.js","webpack://ol-mapbox-style/./node_modules/ol/extent/Relationship.js","webpack://ol-mapbox-style/./node_modules/ol/featureloader.js","webpack://ol-mapbox-style/./node_modules/ol/format/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/Feature.js","webpack://ol-mapbox-style/./node_modules/ol/geom/GeometryCollection.js","webpack://ol-mapbox-style/./node_modules/ol/format/JSONFeature.js","webpack://ol-mapbox-style/./node_modules/ol/format/GeoJSON.js","webpack://ol-mapbox-style/./node_modules/ol/functions.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Geometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiLineString.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/MultiPolygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Point.js","webpack://ol-mapbox-style/./node_modules/ol/geom/LinearRing.js","webpack://ol-mapbox-style/./node_modules/ol/geom/Polygon.js","webpack://ol-mapbox-style/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/area.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/center.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/closest.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/contains.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/deflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/inflate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/length.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/reverse.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/orient.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/segments.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/simplify.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/transform.js","webpack://ol-mapbox-style/./node_modules/ol/has.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Base.js","webpack://ol-mapbox-style/./node_modules/ol/expr/expression.js","webpack://ol-mapbox-style/./node_modules/ol/expr/cpu.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/style.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseVector.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Group.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Property.js","webpack://ol-mapbox-style/./node_modules/ol/layer/TileProperty.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/loadingstrategy.js","webpack://ol-mapbox-style/./node_modules/ol/math.js","webpack://ol-mapbox-style/./node_modules/ol/obj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg3857.js","webpack://ol-mapbox-style/./node_modules/ol/proj/epsg4326.js","webpack://ol-mapbox-style/./node_modules/ol/proj/projections.js","webpack://ol-mapbox-style/./node_modules/ol/proj/transforms.js","webpack://ol-mapbox-style/./node_modules/ol/sphere.js","webpack://ol-mapbox-style/./node_modules/ol/proj.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Projection.js","webpack://ol-mapbox-style/./node_modules/ol/proj/Units.js","webpack://ol-mapbox-style/./node_modules/ol/render/Event.js","webpack://ol-mapbox-style/./node_modules/ol/render/EventType.js","webpack://ol-mapbox-style/./node_modules/ol/render/VectorContext.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mapbox-style/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mapbox-style/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/vector.js","webpack://ol-mapbox-style/./node_modules/ol/reproj.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Triangulation.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/common.js","webpack://ol-mapbox-style/./node_modules/ol/rotationconstraint.js","webpack://ol-mapbox-style/./node_modules/ol/size.js","webpack://ol-mapbox-style/./node_modules/ol/source/Source.js","webpack://ol-mapbox-style/./node_modules/ol/structs/RBush.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/Vector.js","webpack://ol-mapbox-style/./node_modules/ol/style/Circle.js","webpack://ol-mapbox-style/./node_modules/ol/style/Fill.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImage.js","webpack://ol-mapbox-style/./node_modules/ol/style/Icon.js","webpack://ol-mapbox-style/./node_modules/ol/style/IconImageCache.js","webpack://ol-mapbox-style/./node_modules/ol/style/Image.js","webpack://ol-mapbox-style/./node_modules/ol/style/RegularShape.js","webpack://ol-mapbox-style/./node_modules/ol/style/Stroke.js","webpack://ol-mapbox-style/./node_modules/ol/style/Style.js","webpack://ol-mapbox-style/./node_modules/ol/style/Text.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/common.js","webpack://ol-mapbox-style/./node_modules/ol/transform.js","webpack://ol-mapbox-style/./node_modules/ol/util.js","webpack://ol-mapbox-style/./node_modules/ol/render/Feature.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/convert.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/scope.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/formatted.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/types/resolved_image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/values.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/literal.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/runtime_error.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/assertion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/image.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coercion.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/evaluation_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/compound_expression.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/collator.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/within.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/is_constant.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/var.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/parsing_context.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/stops.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/step.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/color_spaces.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/interpolate.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/coalesce.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/let.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/at.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/in.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index_of.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/match.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/case.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/slice.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/comparison.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/number_format.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/length.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/definitions/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/result.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/function/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/expression/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/unbundle_jsonlint.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/reference/latest.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/feature_filter/index.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/util/ref_properties.js","webpack://ol-mapbox-style/./node_modules/@mapbox/mapbox-gl-style-spec/deref.js","webpack://ol-mapbox-style/./node_modules/ol/tilecoord.js","webpack://ol-mapbox-style/./node_modules/ol/tileurlfunction.js","webpack://ol-mapbox-style/./src/mapbox.js","webpack://ol-mapbox-style/./src/util.js","webpack://ol-mapbox-style/./src/text.js","webpack://ol-mapbox-style/./src/stylefunction.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseImage.js","webpack://ol-mapbox-style/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Image.js","webpack://ol-mapbox-style/./node_modules/ol/format/MVT.js","webpack://ol-mapbox-style/./node_modules/ol/ImageCanvas.js","webpack://ol-mapbox-style/./node_modules/ol/resolution.js","webpack://ol-mapbox-style/./node_modules/ol/reproj/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/Image.js","webpack://ol-mapbox-style/./node_modules/ol/source/common.js","webpack://ol-mapbox-style/./node_modules/ol/layer/BaseTile.js","webpack://ol-mapbox-style/./node_modules/ol/layer/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/structs/LRUCache.js","webpack://ol-mapbox-style/./node_modules/ol/TileCache.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-mapbox-style/./node_modules/ol/tilegrid.js","webpack://ol-mapbox-style/./node_modules/ol/source/Tile.js","webpack://ol-mapbox-style/./node_modules/ol/source/Raster.js","webpack://ol-mapbox-style/./node_modules/ol/source/UrlTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileEventType.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileImage.js","webpack://ol-mapbox-style/./node_modules/ol/source/TileJSON.js","webpack://ol-mapbox-style/./node_modules/ol/net.js","webpack://ol-mapbox-style/./node_modules/ol/VectorTile.js","webpack://ol-mapbox-style/./node_modules/ol/VectorRenderTile.js","webpack://ol-mapbox-style/./node_modules/ol/source/VectorTile.js","webpack://ol-mapbox-style/./src/shaders.js","webpack://ol-mapbox-style/./src/apply.js","webpack://ol-mapbox-style/webpack/bootstrap","webpack://ol-mapbox-style/webpack/runtime/define property getters","webpack://ol-mapbox-style/webpack/runtime/hasOwnProperty shorthand","webpack://ol-mapbox-style/webpack/runtime/make namespace object","webpack://ol-mapbox-style/webpack/runtime/jsonp chunk loading"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var fontWeights = {\n  thin: 100,\n  hairline: 100,\n  'ultra-light': 100,\n  'extra-light': 100,\n  light: 200,\n  book: 300,\n  regular: 400,\n  normal: 400,\n  plain: 400,\n  roman: 400,\n  standard: 400,\n  medium: 500,\n  'semi-bold': 600,\n  'demi-bold': 600,\n  bold: 700,\n  heavy: 800,\n  black: 800,\n  'extra-bold': 800,\n  'ultra-black': 900,\n  'extra-black': 900,\n  'ultra-bold': 900,\n  'heavy-black': 900,\n  fat: 900,\n  poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\n\nvar fontCache = {};\n\nmodule.exports = function(fonts, size, lineHeight) {\n  var cssData = fontCache[fonts];\n  if (!cssData) {\n    if (!Array.isArray(fonts)) {\n      fonts = [fonts];\n    }\n    var weight = 400;\n    var style = 'normal';\n    var fontFamilies = [];\n    var haveWeight, haveStyle;\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n      var font = fonts[i];\n      var parts = font.split(' ');\n      var maybeWeight = parts[parts.length - 1].toLowerCase();\n      if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n        style = haveStyle ? style : maybeWeight;\n        parts.pop();\n        maybeWeight = parts[parts.length - 1].toLowerCase();\n      } else if (italicRE.test(maybeWeight)) {\n        maybeWeight = maybeWeight.replace(italicRE, '');\n        style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n      }\n      for (var w in fontWeights) {\n        var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n        if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n          weight = haveWeight ? weight : fontWeights[w];\n          parts.pop();\n          if (previousPart && w.startsWith(previousPart)) {\n            parts.pop();\n          }\n          break;\n        }\n      }\n      if (!haveWeight && typeof maybeWeight == 'number') {\n        weight = maybeWeight;\n      }\n      var fontFamily = parts.join(sp)\n        .replace('Klokantech Noto Sans', 'Noto Sans');\n      if (fontFamily.indexOf(sp) !== -1) {\n        fontFamily = '\"' + fontFamily + '\"';\n      }\n      fontFamilies.push(fontFamily);\n    }\n    // CSS font property: font-style font-weight font-size/line-height font-family\n    cssData = fontCache[fonts] = [style, weight, fontFamilies];\n  }\n  return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n","module.exports = assert\n\nclass AssertionError extends Error {}\nAssertionError.prototype.name = 'AssertionError'\n\n/**\n * Minimal assert function\n * @param  {any} t Value to check if falsy\n * @param  {string=} m Optional assertion error message\n * @throws {AssertionError}\n */\nfunction assert (t, m) {\n  if (!t) {\n    var err = new AssertionError(m)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, assert)\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image.decode().then(() => resolve(image), reject)\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image.decode().then(() => createImageBitmap(image))\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.0.0-dev.1692637592529';\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","//      \n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n              \n              \n              \n              \n\n    constructor(r        , g        , b        , a         = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n                        \n                        \n                              \n                      \n                       \n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input                        )               {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString()         {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01()                                   {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha()                                   {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n","//      \n\nimport assert from 'assert';\n\n                                                                 \n                                                         \n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters     , propertySpec                            )                          {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec)               {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression     ).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s        )                                   {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","//      \n\nclass ParsingError extends Error {\n                \n                    \n    constructor(key        , message        ) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","//      \n\n                                                \n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n                   \n                                        \n    constructor(parent        , bindings                              = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings                             )        {\n        return new Scope(this, bindings);\n    }\n\n    get(name        )             {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name        )          {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","//      \n\n                                         \n                                             \n                                             \n                                               \n                                           \n                                             \n                                           \n                                           \n                                                 \n                                                   \n                                                           \n\n                                                                            \n\n                  \n               \n                 \n                 \n                  \n                \n                 \n                \n                                                           \n                \n                   \n                    \n                      \n\n                         \n                  \n                   \n              \n \n\n                                                                                      \n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType      , N         )            {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type      )         {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected      , t      )          {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided      , allowedTypes             )          {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided     , allowedTypes                   )          {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n","//      \n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\n                   \n                                  \n  \n\n                             \n                 \n                                    \n                                 \n                     \n\n            \n                                    \n                                 \n                     \n\n                                           \n\n                           \n \n\n                        \n                                          \n                              \n                                                         \n                                \n                      \n                                           \n \n\nexport default class Collator {\n                          \n                                                        \n                            \n\n    constructor(caseSensitive         , diacriticSensitive         , locale               ) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs        , rhs        )         {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale()         {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","//      \n                                             \n                                                            \n\nexport class FormattedSection {\n                 \n                                \n                         \n                             \n                            \n\n    constructor(text        , image                      , scale               , fontStack               , textColor              ) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n                                      \n\n    constructor(sections                         ) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted        )            {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty()          {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text                    )            {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString()         {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize()               {\n        const serialized               = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options                           = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]              ).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\n                                    \n                 \n                      \n  \n\nexport default class ResolvedImage {\n                 \n                       \n\n    constructor(options                      ) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString()         {\n        return this.name;\n    }\n\n    static fromString(name        )                       {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize()                {\n        return [\"image\", this.name];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\n                                     \n\nexport function validateRGBA(r       , g       , b       , a        )                {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\n                                                                                                                                                  \n\nexport function isValue(mixed       )          {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value       )       {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType                         ;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value       )         {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","//      \n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\n                                      \n                                         \n                                                                       \n                                                        \n\nclass Literal                       {\n               \n                 \n\n    constructor(type      , value       ) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args                       , context                )                 {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]     );\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate()        {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value     );\n        }\n    }\n}\n\nexport default Literal;\n","//      \n\nclass RuntimeError {\n                 \n                    \n\n    constructor(message        ) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON()         {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","//      \n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name         = (args[0]     );\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx                   )             {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","//      \n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                                   \n                                                            \n                                                        \n                        \n                             \n                            \n                                 \n \n\nexport default class FormatExpression                       {\n               \n                                                \n\n    constructor(sections                                   ) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections                                    = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]     );\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx                   )            {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn                         ) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined()          {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","//      \n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class ImageExpression                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx                   )                       {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize()                       {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name         = (args[0]     );\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx                   )                                                                       {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]     ) / 255, (input[1]     ) / 255, (input[2]     ) / 255, (input[3]     ));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","//      \n\nimport {Color} from './values.js';\n\n                                                \n                                                           \n                                                                        \n                                                             \n                                                                    \n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n                              \n                      \n                                \n                                        \n                                    \n                                      \n                             \n                                              \n\n                                            \n\n    constructor() {\n        this.globals = (null     );\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id()                {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType()                {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry()                       {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID()                         {\n        return this.canonical;\n    }\n\n    properties()                  {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter()         {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input        )         {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","//      \n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\n                                                                    \n                                     \n                                       \n\n                                       \n                                       \n                                                                \n                                               \n                                                            \n\nclass CompoundExpression                       {\n                 \n               \n                        \n                            \n\n                                                   \n\n    constructor(name        , type      , evaluate          , args                   ) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx                   )        {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()               {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args                       , context                )              {\n        const op         = (args[0]     );\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext                 = (null     );\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs                    = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry                    ,\n        definitions                            \n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature           )         {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","//      \n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\nexport default class CollatorExpression                       {\n               \n                              \n                                   \n                              \n\n    constructor(caseSensitive            , diacriticSensitive            , locale                   ) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx                   )           {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined()          {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","//      \n\nimport {isValue} from '../values.js';\n                                      \nimport {BooleanType} from '../types.js';\n                                                                       \n                                                        \n                                                              \n                                                                                        \n                                                                \n\n                                                             \n\n// minX, minY, maxX, maxY\n                                             \nconst EXTENT = 8192;\n\nfunction updateBBox(bbox      , coord                  ) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng        ) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat        ) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1      , bbox2      ) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical                 ) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox      , canonical                 ) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical                 ) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical                 ) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx                   , polygonGeometry                 ) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within                       {\n               \n                    \n                                \n\n    constructor(geojson         , geometries                 ) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]        );\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx                   )          {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n","//      \n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\n                                                \n\nfunction isFeatureConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e            )          {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e            , properties               )          {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","//      \n\n                                      \n                                                 \n                                                        \n                                                               \n\nclass Var                       {\n               \n                 \n                                \n\n    constructor(name        , boundExpression            ) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args                       , context                )             {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx                   )      {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","//      \n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\n                                                                    \n                                     \n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n                                 \n                        \n                \n                 \n                                \n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n                        \n\n    constructor(\n        registry                    ,\n        path                = [],\n        expectedType       ,\n        scope        = new Scope(),\n        errors                      = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr       ,\n        index         ,\n        expectedType        ,\n        bindings                              ,\n        options                                                  = {}\n    )              {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr       , options                                                 )              {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation                              ) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index        , expectedType        , bindings                              )                 {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error        , ...keys               ) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected      , t      )          {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression            ) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n","//      \n\nimport RuntimeError from './runtime_error.js';\n\n                                                \n\n                                                \n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops               , input        )         {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","//      \n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Step                       {\n               \n\n                      \n                          \n                               \n\n    constructor(type      , input            , stops       ) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx                   )      {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","//      \n\nimport Color from './color.js';\n\nexport function number(a        , b        , t        )         {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from       , to       , t        )        {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from               , to               , t        )                {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","//      \n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\n                 \n              \n              \n              \n                 \n  \n\n                 \n              \n              \n              \n                 \n  \n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t        ) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t        ) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x        ) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x        ) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor       )           {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor          )        {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from          , to          , t        )           {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor       )           {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor          )        {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a        , b        , t        ) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from          , to          , t        )           {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","//      \n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\n                                       \n                                                                       \n                                                        \n                                                              \n                                      \n\n                               \n                        \n                                           \n                                                                              \n\nclass Interpolate                       {\n               \n\n                                                                    \n                                     \n                      \n                          \n                               \n\n    constructor(type      , operator                                                       , interpolation                   , input            , stops       ) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation                   , input        , lower        , upper        )         {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args                       , context                )               {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints     )\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops        = [];\n\n        let outputType       = (null     );\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator     ), interpolation, input, stops);\n    }\n\n    evaluate(ctx                   )        {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx)     )        );\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]     )(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize()                       {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","//      \n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Coalesce                       {\n               \n                            \n\n    constructor(type      , args                   ) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args                       , context                )            {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType       = (null     );\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType     ), parsedArgs);\n    }\n\n    evaluate(ctx                   )             {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn                         ) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined()          {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize()                       {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","//      \n\n                                      \n                                                                       \n                                                        \n                                                               \n\nclass Let                       {\n               \n                                          \n                       \n\n    constructor(bindings                             , result            ) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx                   )      {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args                       , context                )       {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings                              = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined()          {\n        return this.result.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","//      \n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                                 \n                                        \n\nclass At                       {\n               \n                      \n                      \n\n    constructor(type      , index            , input            ) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t            = (input.type     );\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx                   )        {\n        const index = ((this.index.evaluate(ctx)     )        );\n        const array = ((this.input.evaluate(ctx)     )              );\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn                         ) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass In                       {\n               \n                       \n                         \n\n    constructor(needle            , haystack            ) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args                       , context                )      {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx                   )          {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined()          {\n        return true;\n    }\n\n    serialize()                       {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","//      \n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass IndexOf                       {\n               \n                       \n                         \n                           \n\n    constructor(needle            , haystack            , fromIndex             ) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args                       , context                )           {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const needle = (this.needle.evaluate(ctx)     );\n        const haystack = (this.haystack.evaluate(ctx)     );\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx)        );\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n","//      \n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType,          } from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n\n// Map input label values to output expression index\n                                         \n\nclass Match                       {\n               \n                    \n\n                      \n                 \n                               \n                          \n\n    constructor(inputType      , outputType      , input            , cases       , outputs                   , otherwise            ) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType     ), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType     ), (outputType     ), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput                                          = [];\n        const outputLookup                            = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","//      \n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\n                                                \n\nclass Case                       {\n               \n\n                       \n                          \n\n    constructor(type      , branches          , otherwise            ) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args                       , context                )        {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType       ;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType     ), branches, otherwise);\n    }\n\n    evaluate(ctx                   )      {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn                         ) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined()          {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize()                       {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","//      \n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Slice                       {\n               \n                      \n                           \n                          \n\n    constructor(type      , input            , beginIndex            , endIndex             ) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args                       , context                )         {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx                   )      {\n        const input = (this.input.evaluate(ctx)     );\n        const beginIndex = (this.beginIndex.evaluate(ctx)        );\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx)        );\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n","//      \n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                                               \n                                                              \n                                                        \n                                      \n\n                                                                 \n\nfunction isComparableType(op                    , type      ) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx                   , a     , b     )          { return a === b; }\nfunction neq(ctx                   , a     , b     )          { return a !== b; }\nfunction lt(ctx                   , a     , b     )          { return a < b; }\nfunction gt(ctx                   , a     , b     )          { return a > b; }\nfunction lteq(ctx                   , a     , b     )          { return a <= b; }\nfunction gteq(ctx                   , a     , b     )          { return a >= b; }\n\nfunction eqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx                   , a     , b     , c     )          { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx                   , a     , b     , c     )          { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op                    , compareBasic                                          , compareWithCollator                                               )                         {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison                       {\n                   \n                        \n                        \n                              \n                                    \n\n        constructor(lhs            , rhs            , collator             ) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args                       , context                )              {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op                     = (args[0]     );\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx                   )          {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn                         ) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined()          {\n            return true;\n        }\n\n        serialize()                       {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals                                                                  = makeComparison('==', eq, eqCollate);\nexport const NotEquals                                                                    = makeComparison('!=', neq, neqCollate);\nexport const LessThan                                                                 = makeComparison('<', lt, ltCollate);\nexport const GreaterThan                                                                 = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual                                                                      = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual                                                                      = makeComparison('>=', gteq, gteqCollate);\n","//      \n\nimport {StringType, NumberType} from '../types.js';\n\n                                                                       \n                                                              \n                                                        \n                                      \n\n                   \n                                          \n  \n\n                                 \n                 \n                                    \n                                     \n                         \n\n            \n                                    \n                                     \n                         \n\n                              \n\n                           \n \n\n                            \n                                                        \n                             \n                         \n                                          \n                                          \n  \n\nexport default class NumberFormat                       {\n               \n                       \n                                 // BCP 47 language tag\n                                 // ISO 4217 currency code, required if style=currency\n                                 // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n                                          // Default 0\n                                          // Default 3\n\n    constructor(number            ,\n                locale                   ,\n                currency                   ,\n                unit                   ,\n                minFractionDigits                   ,\n                maxFractionDigits                   ) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args                       , context                )              {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]     );\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx                   )         {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn                         ) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","//      \n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\n                                                                       \n                                                        \n                                                              \n                                      \n\nclass Length                       {\n               \n                      \n\n    constructor(input            ) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args                       , context                )          {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx                   )               {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn                         ) {\n        fn(this.input);\n    }\n\n    outputDefined()          {\n        return false;\n    }\n\n    serialize()                       {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","//      \n\nimport {\n              \n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\n                                                       \n                                                         \n\nconst expressions                     = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type      )          {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k     ).value] === (v     ).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v     ).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v     ).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k     ).value];\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v     ).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k     ).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v     ).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v     ).value.indexOf(ctx.properties()[(k     ).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k     ).value], (v     ).value, 0, (v     ).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","//      \n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\n                          \n                                       \n                                      \n\nexport function success      (value   )               {\n    return {result: 'success', value};\n}\n\nexport function error      (value   )               {\n    return {result: 'error', value};\n}\n","\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","//      \n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\n                                                     \n                                       \n                                                \n                                                                 \n                                              \n                                                                    \n                                                            \n                                                           \n                                                \n                                                             \n                                                                    \n\n                       \n                                                                      \n                        \n                                    \n                                      \n                                   \n  \n\n                                              \n\n                                          \n                 \n                   \n                            \n                          \n                               \n                                               \n                       \n   \n\nexport class StyleExpression {\n                           \n\n                                  \n                         \n                                              \n                                     \n\n    constructor(expression            , propertySpec                             ) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   , featureTileCoord        , featureDistanceData                      )      {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression       )          {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression       , propertySpec                             )                                               {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression                       {\n               \n                              \n                                      \n\n    constructor(kind      , expression                 ) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant'                ) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression                       {\n               \n                             \n                              \n\n                                      \n                                          \n\n    constructor(kind      , expression                 , zoomStops               , interpolationType                    ) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera'                ) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals                  , feature          , featureState               , canonical                  , availableImages                , formattedSection                   )      {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input        , lower        , upper        )         {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\n                                  \n                     \n                                                                                                                                                                \n \n\n                                \n                   \n                              \n                                                                                                                                                                                                     \n  \n\n                                \n                   \n                                                                                                                                                                \n                                                                                  \n                             \n                                         \n  \n\n                                   \n                      \n                              \n                                                                                                                                                                                                     \n                                                                                  \n                             \n                                         \n  \n\n                                     \n                        \n                      \n                      \n                          \n\nexport function createPropertyExpression(expression       , propertySpec                            )                                                       {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value)                    ) :\n            (new ZoomConstantExpression('source', expression.value)                  ));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType)                  ) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType)                     ));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction    {\n                                               \n                                               \n\n                         \n                                                                    \n                                                                                  \n                              \n\n    constructor(parameters                               , specification                            ) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized                                                                                          )                           {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input                          )                                                                                           {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression   (value                               , specification                            )                          {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification)     );\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant      = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression            )                                           {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec                            )       {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec                            )        {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","//      \n\n                                                                 \n\nexport function supportsPropertyExpression(spec                            )          {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec                            )          {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec                            )          {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","//      \n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value       )        {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value       )        {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue                           = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","//      \n\nimport spec from './v8.json';\n\n                                         \n\nexport default spec;\n","//      \n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\n                                                                      \n                                                             \n                                                \n\n                                                                                                       \n                                                                                                                                                                                                   \n                                                                                                                                      \n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter     )          {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter     , layerType          = 'fill')                {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter     )                             );\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties                  , feature         , canonical                  ) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties                  , feature         , canonical                  , featureTileCoord        , featureDistanceData                      ) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc     )                  );\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter     )      {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression     )      {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter     ) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter     )          {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression        )          {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression     )      {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter             )        {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property        , value     , op        ) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters                   ) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property        , values            ) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property        ) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter       ) {\n    return ['!', filter];\n}\n","//      \nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n","//      \n\nimport refProperties from './util/ref_properties.js';\n\n                                                   \n\nfunction deref(layer                    , parent                    )                     {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent     )[k];\n        }\n    });\n\n    return ((result     )                    );\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers                           )                            {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]     ).ref]);\n        }\n    }\n\n    return layers;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","const mapboxBaseUrl = 'https://api.mapbox.com';\n\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nexport function getMapboxPath(url) {\n  const startsWith = 'mapbox://';\n  if (url.indexOf(startsWith) !== 0) {\n    return '';\n  }\n  return url.slice(startsWith.length);\n}\n\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeSpriteUrl(url, token, styleUrl) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, styleUrl).href);\n  }\n  const startsWith = 'sprites/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected sprites url: ${url}`);\n  }\n  const sprite = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${sprite}/sprite?access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nexport function normalizeStyleUrl(url, token) {\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    return decodeURI(new URL(url, location.href).href);\n  }\n  const startsWith = 'styles/';\n  if (mapboxPath.indexOf(startsWith) !== 0) {\n    throw new Error(`unexpected style url: ${url}`);\n  }\n  const style = mapboxPath.slice(startsWith.length);\n\n  return `${mapboxBaseUrl}/styles/v1/${style}?&access_token=${token}`;\n}\n\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nexport function normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n  const urlObject = new URL(url, styleUrl);\n  const mapboxPath = getMapboxPath(url);\n  if (!mapboxPath) {\n    if (!token) {\n      return decodeURI(urlObject.href);\n    }\n    urlObject.searchParams.set(tokenParam, token);\n    return decodeURI(urlObject.href);\n  }\n\n  if (mapboxPath === 'mapbox.satellite') {\n    const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n    return `https://api.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}${sizeFactor}.webp?access_token=${token}`;\n  }\n  return `https://{a-d}.tiles.mapbox.com/v4/${mapboxPath}/{z}/{x}/{y}.vector.pbf?access_token=${token}`;\n}\n","import {expandUrl} from 'ol/tileurlfunction.js';\nimport {getUid} from 'ol/util.js';\nimport {normalizeSourceUrl, normalizeStyleUrl} from './mapbox.js';\n\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\n\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\n\nlet styleId = 0;\nexport function getStyleId(glStyle) {\n  if (!glStyle.id) {\n    glStyle.id = styleId++;\n  }\n  return glStyle.id;\n}\n\nexport function getStyleFunctionKey(glStyle, olLayer) {\n  return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nexport function getFunctionCache(glStyle) {\n  let functionCache = functionCacheByStyleId[glStyle.id];\n  if (!functionCache) {\n    functionCache = {};\n    functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n  }\n  return functionCache;\n}\n\nexport function clearFunctionCache() {\n  for (const key in functionCacheByStyleId) {\n    delete functionCacheByStyleId[key];\n  }\n}\n\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nexport function getFilterCache(glStyle) {\n  let filterCache = filterCacheByStyleId[glStyle.id];\n  if (!filterCache) {\n    filterCache = {};\n    filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n  }\n  return filterCache;\n}\n\nexport function deg2rad(degrees) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport const defaultResolutions = (function () {\n  const resolutions = [];\n  for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n    resolutions.push(res);\n  }\n  return resolutions;\n})();\n\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nexport function createCanvas(width, height) {\n  if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') { // eslint-disable-line\n    return /** @type {?} */ (new OffscreenCanvas(width, height));\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  return canvas;\n}\n\nexport function getZoomForResolution(resolution, resolutions) {\n  let i = 0;\n  const ii = resolutions.length;\n  for (; i < ii; ++i) {\n    const candidate = resolutions[i];\n    if (candidate < resolution && i + 1 < ii) {\n      const zoomFactor = resolutions[i] / resolutions[i + 1];\n      return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n    }\n  }\n  return ii - 1;\n}\n\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nexport function fetchResource(resourceType, url, options = {}, metadata) {\n  if (url in pendingRequests) {\n    if (metadata) {\n      metadata.request = pendingRequests[url][0];\n    }\n    return pendingRequests[url][1];\n  }\n  const request = options.transformRequest\n    ? options.transformRequest(url, resourceType) || new Request(url)\n    : new Request(url);\n  if (!request.headers.get('Accept')) {\n    request.headers.set('Accept', 'application/json');\n  }\n  if (metadata) {\n    metadata.request = request;\n  }\n  const pendingRequest = fetch(request)\n    .then(function (response) {\n      delete pendingRequests[url];\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Error fetching source ' + url));\n    })\n    .catch(function (error) {\n      delete pendingRequests[url];\n      return Promise.reject(new Error('Error fetching source ' + url));\n    });\n  pendingRequests[url] = [request, pendingRequest];\n  return pendingRequest;\n}\n\nexport function getGlStyle(glStyleOrUrl, options) {\n  if (typeof glStyleOrUrl === 'string') {\n    if (glStyleOrUrl.trim().startsWith('{')) {\n      try {\n        const glStyle = JSON.parse(glStyleOrUrl);\n        return Promise.resolve(glStyle);\n      } catch (error) {\n        return Promise.reject(error);\n      }\n    } else {\n      glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n      return fetchResource('Style', glStyleOrUrl, options);\n    }\n  } else {\n    return Promise.resolve(glStyleOrUrl);\n  }\n}\n\nfunction getTransformedTilesUrl(tilesUrl, options) {\n  if (options.transformRequest) {\n    const transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n    if (transformedRequest instanceof Request) {\n      return decodeURI(transformedRequest.url);\n    }\n  }\n  return tilesUrl;\n}\n\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nexport function getTileJson(glSource, styleUrl, options = {}) {\n  const cacheKey = [styleUrl, JSON.stringify(glSource)].toString();\n  let promise = tilejsonCache[cacheKey];\n  if (!promise || options.transformRequest) {\n    const url = glSource.url;\n    if (url && !glSource.tiles) {\n      const normalizedSourceUrl = normalizeSourceUrl(\n        url,\n        options.accessToken,\n        options.accessTokenParam || 'access_token',\n        styleUrl || location.href\n      );\n      if (url.startsWith('mapbox://')) {\n        promise = Promise.resolve(\n          Object.assign({}, glSource, {\n            url: undefined,\n            tiles: expandUrl(normalizedSourceUrl),\n          })\n        );\n      } else {\n        const metadata = {};\n        promise = fetchResource(\n          'Source',\n          normalizedSourceUrl,\n          options,\n          metadata\n        ).then(function (tileJson) {\n          tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n            if (tileJson.scheme === 'tms') {\n              tileUrl = tileUrl.replace('{y}', '{-y}');\n            }\n            return getTransformedTilesUrl(\n              normalizeSourceUrl(\n                tileUrl,\n                options.accessToken,\n                options.accessTokenParam || 'access_token',\n                metadata.request.url\n              ),\n              options\n            );\n          });\n          return Promise.resolve(tileJson);\n        });\n      }\n    } else {\n      glSource = Object.assign({}, glSource, {\n        tiles: glSource.tiles.map(function (tileUrl) {\n          if (glSource.scheme === 'tms') {\n            tileUrl = tileUrl.replace('{y}', '{-y}');\n          }\n          return getTransformedTilesUrl(\n            normalizeSourceUrl(\n              tileUrl,\n              options.accessToken,\n              options.accessTokenParam || 'access_token',\n              styleUrl || location.href\n            ),\n            options\n          );\n        }),\n      });\n      promise = Promise.resolve(Object.assign({}, glSource));\n    }\n    tilejsonCache[cacheKey] = promise;\n  }\n  return promise;\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nexport function drawIconHalo(\n  spriteImage,\n  spriteImageData,\n  haloWidth,\n  haloColor\n) {\n  const imageCanvas = document.createElement('canvas');\n  const imgSize = [\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n    2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height,\n  ];\n  imageCanvas.width = imgSize[0];\n  imageCanvas.height = imgSize[1];\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    spriteImage,\n    spriteImageData.x,\n    spriteImageData.y,\n    spriteImageData.width,\n    spriteImageData.height,\n    haloWidth * spriteImageData.pixelRatio,\n    haloWidth * spriteImageData.pixelRatio,\n    spriteImageData.width,\n    spriteImageData.height\n  );\n  const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n  imageContext.globalCompositeOperation = 'destination-over';\n  imageContext.fillStyle = `rgba(${haloColor.r * 255},${haloColor.g * 255},${\n    haloColor.b * 255\n  },${haloColor.a})`;\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const alpha = data[index + 3];\n      if (alpha > 0) {\n        imageContext.arc(\n          i,\n          j,\n          haloWidth * spriteImageData.pixelRatio,\n          0,\n          2 * Math.PI\n        );\n      }\n    }\n  }\n  imageContext.fill();\n  return imageCanvas;\n}\n\nfunction smoothstep(min, max, value) {\n  const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n  return x * x * (3 - 2 * x);\n}\n\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nexport function drawSDF(image, area, color) {\n  const imageCanvas = document.createElement('canvas');\n  imageCanvas.width = area.width;\n  imageCanvas.height = area.height;\n  const imageContext = imageCanvas.getContext('2d');\n  imageContext.drawImage(\n    image,\n    area.x,\n    area.y,\n    area.width,\n    area.height,\n    0,\n    0,\n    area.width,\n    area.height\n  );\n  const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n  const data = imageData.data;\n  for (let i = 0, ii = imageData.width; i < ii; ++i) {\n    for (let j = 0, jj = imageData.height; j < jj; ++j) {\n      const index = (j * ii + i) * 4;\n      const dist = data[index + 3] / 255;\n\n      const buffer = 0.75;\n      const gamma = 0.1;\n\n      const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n      if (alpha > 0) {\n        data[index + 0] = Math.round(255 * color.r * alpha);\n        data[index + 1] = Math.round(255 * color.g * alpha);\n        data[index + 2] = Math.round(255 * color.b * alpha);\n        data[index + 3] = Math.round(255 * alpha);\n      } else {\n        data[index + 3] = 0;\n      }\n    }\n  }\n  imageContext.putImageData(imageData, 0, 0);\n  return imageCanvas;\n}\n\n/**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n","import mb2css from 'mapbox-to-css-font';\nimport {checkedFonts, registerFont} from 'ol/render/canvas.js';\nimport {createCanvas} from './util.js';\n\nconst hairSpacePool = Array(256).join('\\u200A');\nexport function applyLetterSpacing(text, letterSpacing) {\n  if (letterSpacing >= 0.05) {\n    let textWithLetterSpacing = '';\n    const lines = text.split('\\n');\n    const joinSpaceString = hairSpacePool.slice(\n      0,\n      Math.round(letterSpacing / 0.1)\n    );\n    for (let l = 0, ll = lines.length; l < ll; ++l) {\n      if (l > 0) {\n        textWithLetterSpacing += '\\n';\n      }\n      textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n    }\n    return textWithLetterSpacing;\n  }\n  return text;\n}\n\nlet measureContext;\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvas(1, 1).getContext('2d');\n  }\n  return measureContext;\n}\n\nfunction measureText(text, letterSpacing) {\n  return (\n    getMeasureContext().measureText(text).width +\n    (text.length - 1) * letterSpacing\n  );\n}\n\nconst measureCache = {};\nexport function wrapText(text, font, em, letterSpacing) {\n  if (text.indexOf('\\n') !== -1) {\n    const hardLines = text.split('\\n');\n    const lines = [];\n    for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n      lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n    }\n    return lines.join('\\n');\n  }\n  const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n  let wrappedText = measureCache[key];\n  if (!wrappedText) {\n    const words = text.split(' ');\n    if (words.length > 1) {\n      const ctx = getMeasureContext();\n      ctx.font = font;\n      const oneEm = ctx.measureText('M').width;\n      const maxWidth = oneEm * em;\n      let line = '';\n      const lines = [];\n      // Pass 1 - wrap lines to not exceed maxWidth\n      for (let i = 0, ii = words.length; i < ii; ++i) {\n        const word = words[i];\n        const testLine = line + (line ? ' ' : '') + word;\n        if (measureText(testLine, letterSpacing) <= maxWidth) {\n          line = testLine;\n        } else {\n          if (line) {\n            lines.push(line);\n          }\n          line = word;\n        }\n      }\n      if (line) {\n        lines.push(line);\n      }\n      // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n      for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n        const line = lines[i];\n        if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n          const prevWidth =\n            i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n          const nextWidth =\n            i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n          lines.splice(i, 1);\n          ii -= 1;\n          if (prevWidth < nextWidth) {\n            lines[i - 1] += ' ' + line;\n            i -= 1;\n          } else {\n            lines[i] = line + ' ' + lines[i];\n          }\n        }\n      }\n      // Pass 3 - try to fill 80% of maxWidth for each line\n      for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n        const line = lines[i];\n        const next = lines[i + 1];\n        if (\n          measureText(line, letterSpacing) > maxWidth * 0.7 &&\n          measureText(next, letterSpacing) < maxWidth * 0.6\n        ) {\n          const lineWords = line.split(' ');\n          const lastWord = lineWords.pop();\n          if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n            lines[i] = lineWords.join(' ');\n            lines[i + 1] = lastWord + ' ' + next;\n          }\n          ii -= 1;\n        }\n      }\n      wrappedText = lines.join('\\n');\n    } else {\n      wrappedText = text;\n    }\n    wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n    measureCache[key] = wrappedText;\n  }\n  return wrappedText;\n}\n\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n  if (!loadedFontFamilies) {\n    loadedFontFamilies = {};\n    const styleSheets = document.styleSheets;\n    for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n      const styleSheet = /** @type {CSSStyleSheet} */ (styleSheets[i]);\n      try {\n        const cssRules = styleSheet.rules || styleSheet.cssRules;\n        if (cssRules) {\n          for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n            const cssRule = cssRules[j];\n            if (cssRule.type == 5) {\n              const match = cssRule.cssText.match(fontFamilyRegEx);\n              loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n            }\n          }\n        }\n      } catch (e) {\n        // empty catch block\n      }\n    }\n  }\n  return family in loadedFontFamilies;\n}\n\nconst processedFontFamilies = {};\n\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nexport function getFonts(\n  fonts,\n  templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css'\n) {\n  const fontsKey = fonts.toString();\n  if (fontsKey in processedFontFamilies) {\n    return processedFontFamilies[fontsKey];\n  }\n  const fontDescriptions = [];\n  for (let i = 0, ii = fonts.length; i < ii; ++i) {\n    fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n    const font = fonts[i];\n    const cssFont = mb2css(font, 1);\n    registerFont(cssFont);\n    const parts = cssFont.split(' ');\n    fontDescriptions.push([\n      parts.slice(3).join(' ').replace(/\"/g, ''),\n      parts[1],\n      parts[0],\n    ]);\n  }\n  for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n    const fontDescription = fontDescriptions[i];\n    const family = fontDescription[0];\n    if (!hasFontFamily(family)) {\n      if (\n        checkedFonts.get(\n          `${fontDescription[2]}\\n${fontDescription[1]} \\n${family}`\n        ) !== 100\n      ) {\n        const fontUrl = templateUrl\n          .replace('{font-family}', family.replace(/ /g, '-').toLowerCase())\n          .replace('{Font+Family}', family.replace(/ /g, '+'))\n          .replace('{fontweight}', fontDescription[1])\n          .replace(\n            '{-fontstyle}',\n            fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')\n          )\n          .replace('{fontstyle}', fontDescription[2]);\n        if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n          const markup = document.createElement('link');\n          markup.href = fontUrl;\n          markup.rel = 'stylesheet';\n          document.head.appendChild(markup);\n        }\n      }\n    }\n  }\n  processedFontFamilies[fontsKey] = fonts;\n  return fonts;\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\n\nimport Color from '@mapbox/mapbox-gl-style-spec/util/color.js';\nimport convertFunction from '@mapbox/mapbox-gl-style-spec/function/convert.js';\nimport createFilter from '@mapbox/mapbox-gl-style-spec/feature_filter/index.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport mb2css from 'mapbox-to-css-font';\nimport spec from '@mapbox/mapbox-gl-style-spec/reference/v8.json';\nimport {applyLetterSpacing, wrapText} from './text.js';\nimport {\n  clearFunctionCache,\n  createCanvas,\n  defaultResolutions,\n  deg2rad,\n  drawIconHalo,\n  drawSDF,\n  getFilterCache,\n  getFunctionCache,\n  getStyleFunctionKey,\n  getZoomForResolution,\n} from './util.js';\nimport {\n  createPropertyExpression,\n  isExpression,\n} from '@mapbox/mapbox-gl-style-spec/expression/index.js';\nimport {isFunction} from '@mapbox/mapbox-gl-style-spec/function/index.js';\n\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\n\nconst types = {\n  'Point': 1,\n  'MultiPoint': 1,\n  'LineString': 2,\n  'MultiLineString': 2,\n  'Polygon': 3,\n  'MultiPolygon': 3,\n};\nconst anchor = {\n  'center': [0.5, 0.5],\n  'left': [0, 0.5],\n  'right': [1, 0.5],\n  'top': [0.5, 0],\n  'bottom': [0.5, 1],\n  'top-left': [0, 0],\n  'top-right': [1, 0],\n  'bottom-left': [0, 1],\n  'bottom-right': [1, 1],\n};\n\nconst expressionData = function (rawExpression, propertySpec) {\n  const compiledExpression = createPropertyExpression(\n    rawExpression,\n    propertySpec\n  );\n  if (compiledExpression.result === 'error') {\n    throw new Error(\n      compiledExpression.value\n        .map((err) => `${err.key}: ${err.message}`)\n        .join(', ')\n    );\n  }\n  return compiledExpression.value;\n};\n\nconst emptyObj = {};\nconst zoomObj = {zoom: 0};\nlet renderFeatureCoordinates, renderFeature;\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nexport function getValue(\n  layer,\n  layoutOrPaint,\n  property,\n  zoom,\n  feature,\n  functionCache,\n  featureState\n) {\n  const layerId = layer.id;\n  if (!functionCache) {\n    functionCache = {};\n    console.warn('No functionCache provided to getValue()'); //eslint-disable-line no-console\n  }\n  if (!functionCache[layerId]) {\n    functionCache[layerId] = {};\n  }\n  const functions = functionCache[layerId];\n  if (!functions[property]) {\n    let value = (layer[layoutOrPaint] || emptyObj)[property];\n    const propertySpec = spec[`${layoutOrPaint}_${layer.type}`][property];\n    if (value === undefined) {\n      value = propertySpec.default;\n    }\n    let isExpr = isExpression(value);\n    if (!isExpr && isFunction(value)) {\n      value = convertFunction(value, propertySpec);\n      isExpr = true;\n    }\n    if (isExpr) {\n      const compiledExpression = expressionData(value, propertySpec);\n      functions[property] =\n        compiledExpression.evaluate.bind(compiledExpression);\n    } else {\n      if (propertySpec.type == 'color') {\n        value = Color.parse(value);\n      }\n      functions[property] = function () {\n        return value;\n      };\n    }\n  }\n  zoomObj.zoom = zoom;\n  return functions[property](zoomObj, feature, featureState);\n}\n\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n  const allowOverlap = getValue(\n    layer,\n    'layout',\n    'icon-allow-overlap',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!allowOverlap) {\n    return 'declutter';\n  }\n  const ignorePlacement = getValue(\n    layer,\n    'layout',\n    'icon-ignore-placement',\n    zoom,\n    feature,\n    functionCache\n  );\n  if (!ignorePlacement) {\n    return 'obstacle';\n  }\n  return 'none';\n}\n\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n  if (!filterCache) {\n    console.warn('No filterCache provided to evaluateFilter()'); //eslint-disable-line no-console\n  }\n  if (!(layerId in filterCache)) {\n    filterCache[layerId] = createFilter(filter).filter;\n  }\n  zoomObj.zoom = zoom;\n  return filterCache[layerId](zoomObj, feature);\n}\n\nlet renderTransparentEnabled = false;\n\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nexport function renderTransparent(enabled) {\n  if (enabled !== renderTransparentEnabled) {\n    clearFunctionCache();\n    renderTransparentEnabled = enabled;\n  }\n}\n\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n  if (color) {\n    if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n      return undefined;\n    }\n    const a = color.a;\n    opacity = opacity === undefined ? 1 : opacity;\n    return a === 0\n      ? 'transparent'\n      : 'rgba(' +\n          Math.round((color.r * 255) / a) +\n          ',' +\n          Math.round((color.g * 255) / a) +\n          ',' +\n          Math.round((color.b * 255) / a) +\n          ',' +\n          a * opacity +\n          ')';\n  }\n  return color;\n}\n\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n  return text.replace(templateRegEx, function (match) {\n    return properties[match.slice(1, -1)] || '';\n  });\n}\n\nlet recordLayer = false;\n\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nexport function recordStyleLayer(record = false) {\n  recordLayer = record;\n}\n\nexport const styleFunctionArgs = {};\n\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nexport function stylefunction(\n  olLayer,\n  glStyle,\n  sourceOrLayers,\n  resolutions = defaultResolutions,\n  spriteData = undefined,\n  spriteImageUrl = undefined,\n  getFonts = undefined,\n  getImage = undefined\n) {\n  if (typeof glStyle == 'string') {\n    glStyle = JSON.parse(glStyle);\n  }\n  if (glStyle.version != 8) {\n    throw new Error('glStyle version 8 required.');\n  }\n  styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] =\n    Array.from(arguments);\n\n  let spriteImage, spriteImageSize;\n  let spriteImageUnSDFed;\n\n  if (spriteImageUrl) {\n    if (typeof Image !== 'undefined') {\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      img.onload = function () {\n        spriteImage = img;\n        spriteImageSize = [img.width, img.height];\n        olLayer.changed();\n        img.onload = null;\n      };\n      img.src = spriteImageUrl;\n    } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) { //eslint-disable-line\n      const worker = /** @type {*} */ (self);\n      // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n      worker.postMessage({\n        action: 'loadImage',\n        src: spriteImageUrl,\n      });\n      worker.addEventListener('message', function handler(event) {\n        if (\n          event.data.action === 'imageLoaded' &&\n          event.data.src === spriteImageUrl\n        ) {\n          spriteImage = event.data.image;\n          spriteImageSize = [spriteImage.width, spriteImage.height];\n        }\n      });\n    }\n  }\n\n  const allLayers = derefLayers(glStyle.layers);\n\n  const layersBySourceLayer = {};\n  const mapboxLayers = [];\n\n  const iconImageCache = {};\n  const patternCache = {};\n  const functionCache = getFunctionCache(glStyle);\n  const filterCache = getFilterCache(glStyle);\n\n  let mapboxSource;\n  for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n    const layer = allLayers[i];\n    const layerId = layer.id;\n    if (\n      (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers) ||\n      sourceOrLayers.indexOf(layerId) !== -1\n    ) {\n      const sourceLayer = layer['source-layer'];\n      if (!mapboxSource) {\n        mapboxSource = layer.source;\n        const source = glStyle.sources[mapboxSource];\n        if (!source) {\n          throw new Error(`Source \"${mapboxSource}\" is not defined`);\n        }\n        const type = source.type;\n        if (type !== 'vector' && type !== 'geojson') {\n          throw new Error(\n            `Source \"${mapboxSource}\" is not of type \"vector\" or \"geojson\", but \"${type}\"`\n          );\n        }\n      } else if (layer.source !== mapboxSource) {\n        throw new Error(\n          `Layer \"${layerId}\" does not use source \"${mapboxSource}`\n        );\n      }\n      let layers = layersBySourceLayer[sourceLayer];\n      if (!layers) {\n        layers = [];\n        layersBySourceLayer[sourceLayer] = layers;\n      }\n      layers.push({\n        layer: layer,\n        index: i,\n      });\n      mapboxLayers.push(layerId);\n    }\n  }\n\n  const textHalo = new Stroke();\n  const textColor = new Fill();\n\n  const styles = [];\n\n  /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n  const styleFunction = function (feature, resolution, onlyLayer) {\n    const properties = feature.getProperties();\n    const layers = layersBySourceLayer[properties.layer];\n    if (!layers) {\n      return undefined;\n    }\n    let zoom = resolutions.indexOf(resolution);\n    if (zoom == -1) {\n      zoom = getZoomForResolution(resolution, resolutions);\n    }\n    const type = types[feature.getGeometry().getType()];\n    const f = {\n      id: feature.getId(),\n      properties: properties,\n      type: type,\n    };\n    const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n    let stylesLength = -1;\n    let featureBelongsToLayer;\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      const layerData = layers[i];\n      const layer = layerData.layer;\n      const layerId = layer.id;\n      if (onlyLayer !== undefined && onlyLayer !== layerId) {\n        continue;\n      }\n\n      const layout = layer.layout || emptyObj;\n      const paint = layer.paint || emptyObj;\n      if (\n        layout.visibility === 'none' ||\n        ('minzoom' in layer && zoom < layer.minzoom) ||\n        ('maxzoom' in layer && zoom >= layer.maxzoom)\n      ) {\n        continue;\n      }\n      const filter = layer.filter;\n      if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n        featureBelongsToLayer = layer;\n        let color, opacity, fill, stroke, strokeColor, style;\n        const index = layerData.index;\n        if (\n          type == 3 &&\n          (layer.type == 'fill' || layer.type == 'fill-extrusion')\n        ) {\n          opacity = getValue(\n            layer,\n            'paint',\n            layer.type + '-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (layer.type + '-pattern' in paint) {\n            const fillIcon = getValue(\n              layer,\n              'paint',\n              layer.type + '-pattern',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            if (fillIcon) {\n              const icon =\n                typeof fillIcon === 'string'\n                  ? fromTemplate(fillIcon, properties)\n                  : fillIcon.toString();\n              if (spriteImage && spriteData && spriteData[icon]) {\n                ++stylesLength;\n                style = styles[stylesLength];\n                if (\n                  !style ||\n                  !style.getFill() ||\n                  style.getStroke() ||\n                  style.getText()\n                ) {\n                  style = new Style({\n                    fill: new Fill(),\n                  });\n                  styles[stylesLength] = style;\n                }\n                fill = style.getFill();\n                style.setZIndex(index);\n                const icon_cache_key = icon + '.' + opacity;\n                let pattern = patternCache[icon_cache_key];\n                if (!pattern) {\n                  const spriteImageData = spriteData[icon];\n                  const canvas = createCanvas(\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  const ctx = /** @type {CanvasRenderingContext2D} */ (\n                    canvas.getContext('2d')\n                  );\n                  ctx.globalAlpha = opacity;\n                  ctx.drawImage(\n                    spriteImage,\n                    spriteImageData.x,\n                    spriteImageData.y,\n                    spriteImageData.width,\n                    spriteImageData.height,\n                    0,\n                    0,\n                    spriteImageData.width,\n                    spriteImageData.height\n                  );\n                  pattern = ctx.createPattern(canvas, 'repeat');\n                  patternCache[icon_cache_key] = pattern;\n                }\n                fill.setColor(pattern);\n              }\n            }\n          } else {\n            color = colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                layer.type + '-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            );\n            if (layer.type + '-outline-color' in paint) {\n              strokeColor = colorWithOpacity(\n                getValue(\n                  layer,\n                  'paint',\n                  layer.type + '-outline-color',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                ),\n                opacity\n              );\n            }\n            if (!strokeColor) {\n              strokeColor = color;\n            }\n            if (color || strokeColor) {\n              ++stylesLength;\n              style = styles[stylesLength];\n              if (\n                !style ||\n                (color && !style.getFill()) ||\n                (!color && style.getFill()) ||\n                (strokeColor && !style.getStroke()) ||\n                (!strokeColor && style.getStroke()) ||\n                style.getText()\n              ) {\n                style = new Style({\n                  fill: color ? new Fill() : undefined,\n                  stroke: strokeColor ? new Stroke() : undefined,\n                });\n                styles[stylesLength] = style;\n              }\n              if (color) {\n                fill = style.getFill();\n                fill.setColor(color);\n              }\n              if (strokeColor) {\n                stroke = style.getStroke();\n                stroke.setColor(strokeColor);\n                stroke.setWidth(0.5);\n              }\n              style.setZIndex(index);\n            }\n          }\n        }\n        if (type != 1 && layer.type == 'line') {\n          color =\n            !('line-pattern' in paint) && 'line-color' in paint\n              ? colorWithOpacity(\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ),\n                  getValue(\n                    layer,\n                    'paint',\n                    'line-opacity',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  )\n                )\n              : undefined;\n          const width = getValue(\n            layer,\n            'paint',\n            'line-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (color && width > 0) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getStroke() ||\n              style.getFill() ||\n              style.getText()\n            ) {\n              style = new Style({\n                stroke: new Stroke(),\n              });\n              styles[stylesLength] = style;\n            }\n            stroke = style.getStroke();\n            stroke.setLineCap(\n              getValue(\n                layer,\n                'layout',\n                'line-cap',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setLineJoin(\n              getValue(\n                layer,\n                'layout',\n                'line-join',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setMiterLimit(\n              getValue(\n                layer,\n                'layout',\n                'line-miter-limit',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            );\n            stroke.setColor(color);\n            stroke.setWidth(width);\n            stroke.setLineDash(\n              paint['line-dasharray']\n                ? getValue(\n                    layer,\n                    'paint',\n                    'line-dasharray',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  ).map(function (x) {\n                    return x * width;\n                  })\n                : null\n            );\n            style.setZIndex(index);\n          }\n        }\n\n        let hasImage = false;\n        let text = null;\n        let placementAngle = 0;\n        let icon, iconImg, skipLabel;\n        if ((type == 1 || type == 2) && 'icon-image' in layout) {\n          const iconImage = getValue(\n            layer,\n            'layout',\n            'icon-image',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (iconImage) {\n            icon =\n              typeof iconImage === 'string'\n                ? fromTemplate(iconImage, properties)\n                : iconImage.toString();\n            let styleGeom = undefined;\n            const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n            if (\n              (spriteImage && spriteData && spriteData[icon]) ||\n              imageElement\n            ) {\n              const iconRotationAlignment = getValue(\n                layer,\n                'layout',\n                'icon-rotation-alignment',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              );\n              if (type == 2) {\n                const geom = /** @type {*} */ (feature.getGeometry());\n                // ol package and ol-debug.js only\n                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                  const extent = geom.getExtent();\n                  const size = Math.sqrt(\n                    Math.max(\n                      Math.pow((extent[2] - extent[0]) / resolution, 2),\n                      Math.pow((extent[3] - extent[1]) / resolution, 2)\n                    )\n                  );\n                  if (size > 150) {\n                    //FIXME Do not hard-code a size of 150\n                    const midpoint =\n                      geom.getType() === 'MultiLineString'\n                        ? geom.getFlatMidpoints()\n                        : geom.getFlatMidpoint();\n                    if (!renderFeature) {\n                      renderFeatureCoordinates = [NaN, NaN];\n                      renderFeature = new RenderFeature(\n                        'Point',\n                        renderFeatureCoordinates,\n                        [],\n                        {},\n                        null\n                      );\n                    }\n                    styleGeom = renderFeature;\n                    renderFeatureCoordinates[0] = midpoint[0];\n                    renderFeatureCoordinates[1] = midpoint[1];\n                    const placement = getValue(\n                      layer,\n                      'layout',\n                      'symbol-placement',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    );\n                    if (\n                      placement === 'line' &&\n                      iconRotationAlignment === 'map'\n                    ) {\n                      const stride = geom.getStride();\n                      const coordinates = geom.getFlatCoordinates();\n                      for (\n                        let i = 0, ii = coordinates.length - stride;\n                        i < ii;\n                        i += stride\n                      ) {\n                        const x1 = coordinates[i];\n                        const y1 = coordinates[i + 1];\n                        const x2 = coordinates[i + stride];\n                        const y2 = coordinates[i + stride + 1];\n                        const minX = Math.min(x1, x2);\n                        const minY = Math.min(y1, y2);\n                        const maxX = Math.max(x1, x2);\n                        const maxY = Math.max(y1, y2);\n                        if (\n                          midpoint[0] >= minX &&\n                          midpoint[0] <= maxX &&\n                          midpoint[1] >= minY &&\n                          midpoint[1] <= maxY\n                        ) {\n                          placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                          break;\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n              if (type !== 2 || styleGeom) {\n                const iconSize = getValue(\n                  layer,\n                  'layout',\n                  'icon-size',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n                const iconColor =\n                  paint['icon-color'] !== undefined\n                    ? getValue(\n                        layer,\n                        'paint',\n                        'icon-color',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    : null;\n                if (!iconColor || iconColor.a !== 0) {\n                  const haloColor = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-color',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  const haloWidth = getValue(\n                    layer,\n                    'paint',\n                    'icon-halo-width',\n                    zoom,\n                    f,\n                    functionCache,\n                    featureState\n                  );\n                  let iconCacheKey = `${icon}.${iconSize}.${haloWidth}.${haloColor}`;\n                  if (iconColor !== null) {\n                    iconCacheKey += `.${iconColor}`;\n                  }\n                  iconImg = iconImageCache[iconCacheKey];\n                  if (!iconImg) {\n                    const declutterMode = getIconDeclutterMode(\n                      layer,\n                      zoom,\n                      f,\n                      functionCache\n                    );\n                    let displacement;\n                    if ('icon-offset' in layout) {\n                      displacement = getValue(\n                        layer,\n                        'layout',\n                        'icon-offset',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      ).slice(0);\n                      displacement[1] *= -1;\n                    }\n                    let color = iconColor\n                      ? [\n                          iconColor.r * 255,\n                          iconColor.g * 255,\n                          iconColor.b * 255,\n                          iconColor.a,\n                        ]\n                      : undefined;\n                    if (imageElement) {\n                      const iconOptions = {\n                        color: color,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      };\n                      if (typeof imageElement === 'string') {\n                        // it is a src URL\n                        iconOptions.src = imageElement;\n                      } else {\n                        iconOptions.img = imageElement;\n                        iconOptions.imgSize = [\n                          imageElement.width,\n                          imageElement.height,\n                        ];\n                      }\n                      iconImg = new Icon(iconOptions);\n                    } else {\n                      const spriteImageData = spriteData[icon];\n                      let img, imgSize, size, offset;\n                      if (haloWidth) {\n                        if (spriteImageData.sdf) {\n                          img = drawIconHalo(\n                            drawSDF(spriteImage, spriteImageData, iconColor),\n                            {\n                              x: 0,\n                              y: 0,\n                              width: spriteImageData.width,\n                              height: spriteImageData.height,\n                              pixelRatio: spriteImageData.pixelRatio,\n                            },\n                            haloWidth,\n                            haloColor\n                          );\n                          color = undefined; // do not tint haloed icons\n                        } else {\n                          img = drawIconHalo(\n                            spriteImage,\n                            spriteImageData,\n                            haloWidth,\n                            haloColor\n                          );\n                        }\n                        imgSize = [img.width, img.height];\n                      } else {\n                        if (spriteImageData.sdf) {\n                          if (!spriteImageUnSDFed) {\n                            spriteImageUnSDFed = drawSDF(\n                              spriteImage,\n                              {\n                                x: 0,\n                                y: 0,\n                                width: spriteImageSize[0],\n                                height: spriteImageSize[1],\n                              },\n                              {r: 1, g: 1, b: 1, a: 1}\n                            );\n                          }\n                          img = spriteImageUnSDFed;\n                        } else {\n                          img = spriteImage;\n                        }\n                        imgSize = spriteImageSize;\n                        size = [spriteImageData.width, spriteImageData.height];\n                        offset = [spriteImageData.x, spriteImageData.y];\n                      }\n                      iconImg = new Icon({\n                        color: color,\n                        img: img,\n                        imgSize: imgSize,\n                        size: size,\n                        offset: offset,\n                        rotateWithView: iconRotationAlignment === 'map',\n                        scale: iconSize / spriteImageData.pixelRatio,\n                        displacement: displacement,\n                        declutterMode: declutterMode,\n                      });\n                    }\n                    iconImageCache[iconCacheKey] = iconImg;\n                  }\n                }\n                if (iconImg) {\n                  ++stylesLength;\n                  style = styles[stylesLength];\n                  if (\n                    !style ||\n                    !style.getImage() ||\n                    style.getFill() ||\n                    style.getStroke()\n                  ) {\n                    style = new Style();\n                    styles[stylesLength] = style;\n                  }\n                  style.setGeometry(styleGeom);\n                  iconImg.setRotation(\n                    placementAngle +\n                      deg2rad(\n                        getValue(\n                          layer,\n                          'layout',\n                          'icon-rotate',\n                          zoom,\n                          f,\n                          functionCache,\n                          featureState\n                        )\n                      )\n                  );\n                  iconImg.setOpacity(\n                    getValue(\n                      layer,\n                      'paint',\n                      'icon-opacity',\n                      zoom,\n                      f,\n                      functionCache,\n                      featureState\n                    )\n                  );\n                  iconImg.setAnchor(\n                    anchor[\n                      getValue(\n                        layer,\n                        'layout',\n                        'icon-anchor',\n                        zoom,\n                        f,\n                        functionCache,\n                        featureState\n                      )\n                    ]\n                  );\n                  style.setImage(iconImg);\n                  text = style.getText();\n                  style.setText(undefined);\n                  style.setZIndex(index);\n                  hasImage = true;\n                  skipLabel = false;\n                }\n              } else {\n                skipLabel = true;\n              }\n            }\n          }\n        }\n\n        if (type == 1 && layer.type === 'circle') {\n          ++stylesLength;\n          style = styles[stylesLength];\n          if (\n            !style ||\n            !style.getImage() ||\n            style.getFill() ||\n            style.getStroke()\n          ) {\n            style = new Style();\n            styles[stylesLength] = style;\n          }\n          const circleRadius =\n            'circle-radius' in paint\n              ? getValue(\n                  layer,\n                  'paint',\n                  'circle-radius',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              : 5;\n          const circleStrokeColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-stroke-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'circle-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            getValue(\n              layer,\n              'paint',\n              'circle-opacity',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const circleStrokeWidth = getValue(\n            layer,\n            'paint',\n            'circle-stroke-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const cache_key =\n            circleRadius +\n            '.' +\n            circleStrokeColor +\n            '.' +\n            circleColor +\n            '.' +\n            circleStrokeWidth;\n          iconImg = iconImageCache[cache_key];\n          if (!iconImg) {\n            iconImg = new Circle({\n              radius: circleRadius,\n              stroke:\n                circleStrokeColor && circleStrokeWidth > 0\n                  ? new Stroke({\n                      width: circleStrokeWidth,\n                      color: circleStrokeColor,\n                    })\n                  : undefined,\n              fill: circleColor\n                ? new Fill({\n                    color: circleColor,\n                  })\n                : undefined,\n              declutterMode: 'none',\n            });\n            iconImageCache[cache_key] = iconImg;\n          }\n          style.setImage(iconImg);\n          text = style.getText();\n          style.setText(undefined);\n          style.setGeometry(undefined);\n          style.setZIndex(index);\n          hasImage = true;\n        }\n\n        let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n        if ('text-field' in layout) {\n          textSize = Math.round(\n            getValue(\n              layer,\n              'layout',\n              'text-size',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            )\n          );\n          const fontArray = getValue(\n            layer,\n            'layout',\n            'text-font',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          textLineHeight = getValue(\n            layer,\n            'layout',\n            'text-line-height',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          font = mb2css(\n            getFonts\n              ? getFonts(\n                  fontArray,\n                  glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined\n                )\n              : fontArray,\n            textSize,\n            textLineHeight\n          );\n          if (!font.includes('sans-serif')) {\n            font += ',sans-serif';\n          }\n          letterSpacing = getValue(\n            layer,\n            'layout',\n            'text-letter-spacing',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          maxTextWidth = getValue(\n            layer,\n            'layout',\n            'text-max-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textField = getValue(\n            layer,\n            'layout',\n            'text-field',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          if (typeof textField === 'object' && textField.sections) {\n            if (textField.sections.length === 1) {\n              label = textField.toString();\n            } else {\n              label = textField.sections.reduce((acc, chunk, i) => {\n                const fonts = chunk.fontStack\n                  ? chunk.fontStack.split(',')\n                  : fontArray;\n                const chunkFont = mb2css(\n                  getFonts ? getFonts(fonts) : fonts,\n                  textSize * (chunk.scale || 1),\n                  textLineHeight\n                );\n                let text = chunk.text;\n                if (text === '\\n') {\n                  acc.push('\\n', '');\n                  return acc;\n                }\n                if (type == 2) {\n                  acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                  return;\n                }\n                text = wrapText(\n                  text,\n                  chunkFont,\n                  maxTextWidth,\n                  letterSpacing\n                ).split('\\n');\n                for (let i = 0, ii = text.length; i < ii; ++i) {\n                  if (i > 0) {\n                    acc.push('\\n', '');\n                  }\n                  acc.push(text[i], chunkFont);\n                }\n                return acc;\n              }, []);\n            }\n          } else {\n            label = fromTemplate(textField, properties).trim();\n          }\n          opacity = getValue(\n            layer,\n            'paint',\n            'text-opacity',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n        }\n        if (label && opacity && !skipLabel) {\n          if (!hasImage) {\n            ++stylesLength;\n            style = styles[stylesLength];\n            if (\n              !style ||\n              !style.getText() ||\n              style.getFill() ||\n              style.getStroke()\n            ) {\n              style = new Style();\n              styles[stylesLength] = style;\n            }\n            style.setImage(undefined);\n            style.setGeometry(undefined);\n          }\n          if (!style.getText()) {\n            style.setText(\n              text ||\n                new Text({\n                  padding: [2, 2, 2, 2],\n                })\n            );\n          }\n          text = style.getText();\n          const textTransform = layout['text-transform'];\n          if (textTransform == 'uppercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toUpperCase()))\n              : label.toUpperCase();\n          } else if (textTransform == 'lowercase') {\n            label = Array.isArray(label)\n              ? label.map((t, i) => (i % 2 ? t : t.toLowerCase()))\n              : label.toLowerCase();\n          }\n          const wrappedLabel = Array.isArray(label)\n            ? label\n            : type == 2\n            ? applyLetterSpacing(label, letterSpacing)\n            : wrapText(label, font, maxTextWidth, letterSpacing);\n          text.setText(wrappedLabel);\n          text.setFont(font);\n          text.setRotation(\n            deg2rad(\n              getValue(\n                layer,\n                'layout',\n                'text-rotate',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              )\n            )\n          );\n          const textAnchor = getValue(\n            layer,\n            'layout',\n            'text-anchor',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const placement =\n            hasImage || type == 1\n              ? 'point'\n              : getValue(\n                  layer,\n                  'layout',\n                  'symbol-placement',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                );\n          let textAlign;\n          if (placement === 'line-center') {\n            text.setPlacement('line');\n            textAlign = 'center';\n          } else {\n            text.setPlacement(placement);\n          }\n          if (placement === 'line' && typeof text.setRepeat === 'function') {\n            const symbolSpacing = getValue(\n              layer,\n              'layout',\n              'symbol-spacing',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRepeat(symbolSpacing * 2);\n          }\n          text.setOverflow(placement === 'point');\n          let textHaloWidth = getValue(\n            layer,\n            'paint',\n            'text-halo-width',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textOffset = getValue(\n            layer,\n            'layout',\n            'text-offset',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const textTranslate = getValue(\n            layer,\n            'paint',\n            'text-translate',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          // Text offset has to take halo width and line height into account\n          let vOffset = 0;\n          let hOffset = 0;\n          if (placement == 'point') {\n            textAlign = 'center';\n            if (textAnchor.indexOf('left') !== -1) {\n              textAlign = 'left';\n              hOffset = textHaloWidth;\n            } else if (textAnchor.indexOf('right') !== -1) {\n              textAlign = 'right';\n              hOffset = -textHaloWidth;\n            }\n            const textRotationAlignment = getValue(\n              layer,\n              'layout',\n              'text-rotation-alignment',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            );\n            text.setRotateWithView(textRotationAlignment == 'map');\n          } else {\n            text.setMaxAngle(\n              (deg2rad(\n                getValue(\n                  layer,\n                  'layout',\n                  'text-max-angle',\n                  zoom,\n                  f,\n                  functionCache,\n                  featureState\n                )\n              ) *\n                label.length) /\n                wrappedLabel.length\n            );\n            text.setRotateWithView(false);\n          }\n          text.setTextAlign(textAlign);\n          let textBaseline = 'middle';\n          if (textAnchor.indexOf('bottom') == 0) {\n            textBaseline = 'bottom';\n            vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n          } else if (textAnchor.indexOf('top') == 0) {\n            textBaseline = 'top';\n            vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n          }\n          text.setTextBaseline(textBaseline);\n          const textJustify = getValue(\n            layer,\n            'layout',\n            'text-justify',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n          text.setOffsetX(\n            textOffset[0] * textSize + hOffset + textTranslate[0]\n          );\n          text.setOffsetY(\n            textOffset[1] * textSize + vOffset + textTranslate[1]\n          );\n          textColor.setColor(\n            colorWithOpacity(\n              getValue(\n                layer,\n                'paint',\n                'text-color',\n                zoom,\n                f,\n                functionCache,\n                featureState\n              ),\n              opacity\n            )\n          );\n          text.setFill(textColor);\n          const haloColor = colorWithOpacity(\n            getValue(\n              layer,\n              'paint',\n              'text-halo-color',\n              zoom,\n              f,\n              functionCache,\n              featureState\n            ),\n            opacity\n          );\n          if (haloColor) {\n            textHalo.setColor(haloColor);\n            // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n            // Halo width must be doubled because it is applied around the center of the text outline\n            textHaloWidth *= 2;\n            // 1/4 of text size (spec) x 2\n            const halfTextSize = 0.5 * textSize;\n            textHalo.setWidth(\n              textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize\n            );\n            text.setStroke(textHalo);\n          } else {\n            text.setStroke(undefined);\n          }\n          const textPadding = getValue(\n            layer,\n            'layout',\n            'text-padding',\n            zoom,\n            f,\n            functionCache,\n            featureState\n          );\n          const padding = text.getPadding();\n          if (textPadding !== padding[0]) {\n            padding[0] = textPadding;\n            padding[1] = textPadding;\n            padding[2] = textPadding;\n            padding[3] = textPadding;\n          }\n          style.setZIndex(index);\n        }\n      }\n    }\n\n    if (stylesLength > -1) {\n      styles.length = stylesLength + 1;\n      if (recordLayer) {\n        if ('set' in feature) {\n          // ol/Feature\n          feature.set('mapbox-layer', featureBelongsToLayer);\n        } else {\n          // ol/render/Feature\n          feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n        }\n      }\n      return styles;\n    }\n    return undefined;\n  };\n\n  olLayer.setStyle(styleFunction);\n  olLayer.set('mapbox-source', mapboxSource);\n  olLayer.set('mapbox-layers', mapboxLayers);\n  olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n  return styleFunction;\n}\n\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nexport function getStyleForLayer(feature, resolution, olLayer, layerId) {\n  const evaluateStyle = olLayer.getStyleFunction();\n  if (evaluateStyle.length === 3) {\n    // @ts-ignore\n    return evaluateStyle(feature, resolution, layerId);\n  }\n  return undefined;\n}\n\nexport {\n  colorWithOpacity as _colorWithOpacity,\n  evaluateFilter as _evaluateFilter,\n  fromTemplate as _fromTemplate,\n  getValue as _getValue,\n};\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageState from './ImageState.js';\nimport ImageWrapper from './Image.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageWrapper {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\nimport {ceil} from '../math.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate()\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (this.image) {\n        if (\n          ((this.wantedExtent_ &&\n            containsExtent(this.wantedExtent_, requestExtent)) ||\n            containsExtent(this.image.getExtent(), requestExtent)) &&\n          ((this.wantedResolution_ &&\n            fromResolutionLike(this.wantedResolution_) === requestResolution) ||\n            fromResolutionLike(this.image.getResolution()) ===\n              requestResolution)\n        ) {\n          return this.image;\n        }\n      }\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    }\n    return {data: data, width: width, height: height};\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n * @property {Array<number>|null} [resolutions] Resolutions. If specified, raster operations will only\n * be run at the given resolutions.  By default, the resolutions of the first source with resolutions\n * specified will be used, if any. Set to `null` to use any view resolution instead.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /** @type {boolean} */\n    this.useResolutions_ = options.resolutions !== null;\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.processSources_.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        if (!source) {\n          continue;\n        }\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.size[0] = Math.ceil(getWidth(extent) / resolution);\n    frameState.size[1] = Math.ceil(getHeight(extent) / resolution);\n    frameState.extent = [\n      center[0] - (frameState.size[0] * resolution) / 2,\n      center[1] - (frameState.size[1] * resolution) / 2,\n      center[0] + (frameState.size[0] * resolution) / 2,\n      center[1] + (frameState.size[1] * resolution) / 2,\n    ];\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (!source || source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    this.tileQueue_.loadMoreTiles(16, 16);\n\n    resolution = this.findNearestResolution(resolution);\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(frameState.extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      frameState.renderTargets = {};\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    } else {\n      this.changed();\n    }\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    if (!this.useResolutions_) {\n      return null;\n    }\n    let resolutions = super.getResolutions();\n    if (!resolutions) {\n      for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n        const source = this.layers_[i].getSource();\n        resolutions = source.getResolutions(projection);\n        if (resolutions) {\n          break;\n        }\n      }\n    }\n    return resolutions;\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height, undefined, {\n      willReadFrequently: true,\n    });\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height, undefined, {\n        willReadFrequently: true,\n      });\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nexport function hillshade(inputs, data) {\n  const elevationImage = inputs[0];\n  const width = elevationImage.width;\n  const height = elevationImage.height;\n  const elevationData = elevationImage.data;\n  const shadeData = new Uint8ClampedArray(elevationData.length);\n  const dp = data.resolution * 2;\n  const maxX = width - 1;\n  const maxY = height - 1;\n  const pixel = [0, 0, 0, 0];\n  const twoPi = 2 * Math.PI;\n  const halfPi = Math.PI / 2;\n  const sunEl = (Math.PI * data.sunEl) / 180;\n  const sunAz = (Math.PI * data.sunAz) / 180;\n  const cosSunEl = Math.cos(sunEl);\n  const sinSunEl = Math.sin(sunEl);\n  const highlightColor = data.highlightColor;\n  const shadowColor = data.shadowColor;\n  const accentColor = data.accentColor;\n  const encoding = data.encoding;\n\n  let pixelX,\n    pixelY,\n    x0,\n    x1,\n    y0,\n    y1,\n    offset,\n    z0,\n    z1,\n    dzdx,\n    dzdy,\n    slope,\n    aspect,\n    accent,\n    scaled,\n    shade,\n    scaledAccentColor,\n    compositeShadeColor,\n    clamp,\n    slopeScaleBase,\n    scaledSlope,\n    cosIncidence;\n\n  function calculateElevation(pixel, encoding = 'mapbox') {\n    // The method used to extract elevations from the DEM.\n    //\n    // The supported methods are the Mapbox format\n    // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n    // and the Terrarium format\n    // (red * 256 + green + blue / 256) - 32768\n    //\n    if (encoding === 'mapbox') {\n      return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    if (encoding === 'terrarium') {\n      return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n    }\n  }\n  for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n    y0 = pixelY === 0 ? 0 : pixelY - 1;\n    y1 = pixelY === maxY ? maxY : pixelY + 1;\n    for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n      x0 = pixelX === 0 ? 0 : pixelX - 1;\n      x1 = pixelX === maxX ? maxX : pixelX + 1;\n\n      // determine elevation for (x0, pixelY)\n      offset = (pixelY * width + x0) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (x1, pixelY)\n      offset = (pixelY * width + x1) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdx = (z1 - z0) / dp;\n\n      // determine elevation for (pixelX, y0)\n      offset = (y0 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z0 = data.vert * calculateElevation(pixel, encoding);\n\n      // determine elevation for (pixelX, y1)\n      offset = (y1 * width + pixelX) * 4;\n      pixel[0] = elevationData[offset];\n      pixel[1] = elevationData[offset + 1];\n      pixel[2] = elevationData[offset + 2];\n      pixel[3] = elevationData[offset + 3];\n      z1 = data.vert * calculateElevation(pixel, encoding);\n\n      dzdy = (z1 - z0) / dp;\n\n      aspect = Math.atan2(dzdy, -dzdx);\n      if (aspect < 0) {\n        aspect = halfPi - aspect;\n      } else if (aspect > halfPi) {\n        aspect = twoPi - aspect + halfPi;\n      } else {\n        aspect = halfPi - aspect;\n      }\n\n      // Bootstrap slope and corresponding incident values\n      slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n      cosIncidence =\n        sinSunEl * Math.cos(slope) +\n        cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n      accent = Math.cos(slope);\n      // 255 for Hex colors\n      scaled = 255 * cosIncidence;\n\n      /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n\n      // Forces given value to stay between two given extremes\n      clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n\n      // Intensity basis for hillshade opacity\n      slopeScaleBase = 1.875 - data.opacity * 1.75;\n      // Intensity interpolation so that higher intensity values create more opaque hillshading\n      scaledSlope =\n        data.opacity !== 0.5\n          ? halfPi *\n            ((Math.pow(slopeScaleBase, slope) - 1) /\n              (Math.pow(slopeScaleBase, halfPi) - 1))\n          : slope;\n\n      // Accent hillshade color with given accentColor to emphasize rougher terrain\n      scaledAccentColor = {\n        r: (1 - accent) * accentColor.r * clamp * 255,\n        g: (1 - accent) * accentColor.g * clamp * 255,\n        b: (1 - accent) * accentColor.b * clamp * 255,\n        a: (1 - accent) * accentColor.a * clamp * 255,\n      };\n\n      // Allows highlight vs shadow discrimination\n      shade = Math.abs((((aspect + sunAz) / Math.PI + 0.5) % 2) - 1);\n      // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n      compositeShadeColor = {\n        r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n        g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n        b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n        a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled,\n      };\n\n      // Fill in result color value\n      offset = (pixelY * width + pixelX) * 4;\n      shadeData[offset] =\n        scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n      shadeData[offset + 1] =\n        scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n      shadeData[offset + 2] =\n        scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n      // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n      shadeData[offset + 3] =\n        elevationData[offset + 3] *\n        data.opacity *\n        clamp *\n        Math.sin(scaledSlope);\n    }\n  }\n\n  return new ImageData(shadeData, width, height);\n}\n","/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, {defaultLoadFunction} from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport derefLayers from '@mapbox/mapbox-gl-style-spec/deref.js';\nimport {\n  METERS_PER_UNIT,\n  equivalent,\n  fromLonLat,\n  get as getProjection,\n  getUserProjection,\n} from 'ol/proj.js';\nimport {\n  _colorWithOpacity,\n  stylefunction as applyStyleFunction,\n  stylefunction as applyStylefunction,\n  getValue,\n  styleFunctionArgs,\n} from './stylefunction.js';\nimport {bbox as bboxStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {\n  defaultResolutions,\n  fetchResource,\n  getFilterCache,\n  getFunctionCache,\n  getGlStyle,\n  getStyleFunctionKey,\n  getTileJson,\n  getZoomForResolution,\n} from './util.js';\nimport {getFonts} from './text.js';\nimport {getTopLeft} from 'ol/extent.js';\nimport {hillshade} from './shaders.js';\nimport {\n  normalizeSourceUrl,\n  normalizeSpriteUrl,\n  normalizeStyleUrl,\n} from './mapbox.js';\n\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n  return projection.getExtent()\n    ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22,\n      }).getResolutions()\n    : defaultResolutions;\n}\n\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n  if (!options.accessToken) {\n    options = Object.assign({}, options);\n    const searchParams = new URL(styleUrl).searchParams;\n    // The last search parameter is the access token\n    searchParams.forEach((value, key) => {\n      options.accessToken = value;\n      options.accessTokenParam = key;\n    });\n  }\n  return options;\n}\n\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nexport function applyStyle(\n  layer,\n  glStyle,\n  sourceOrLayersOrOptions = '',\n  optionsOrPath = {},\n  resolutions = undefined\n) {\n  let styleUrl, sourceId;\n  /** @type {Options&ApplyStyleOptions} */\n  let options;\n  let sourceOrLayers;\n  let updateSource = true;\n  if (\n    typeof sourceOrLayersOrOptions !== 'string' &&\n    !Array.isArray(sourceOrLayersOrOptions)\n  ) {\n    options = sourceOrLayersOrOptions;\n    sourceOrLayers = options.source || options.layers;\n    optionsOrPath = options;\n  } else {\n    sourceOrLayers = sourceOrLayersOrOptions;\n  }\n  if (typeof optionsOrPath === 'string') {\n    styleUrl = optionsOrPath;\n    options = {};\n  } else {\n    styleUrl = optionsOrPath.styleUrl;\n    options = optionsOrPath;\n  }\n  if (options.updateSource === false) {\n    updateSource = false;\n  }\n  if (!resolutions) {\n    resolutions = options.resolutions;\n  }\n  if (\n    !styleUrl &&\n    typeof glStyle === 'string' &&\n    !glStyle.trim().startsWith('{')\n  ) {\n    styleUrl = glStyle;\n  }\n  if (styleUrl) {\n    styleUrl = styleUrl.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(styleUrl, options.accessToken);\n    options = completeOptions(styleUrl, options);\n  }\n\n  return new Promise(function (resolve, reject) {\n    // TODO: figure out where best place to check source type is\n    // Note that the source arg is an array of gl layer ids and each must be\n    // dereferenced to get source type to validate\n    getGlStyle(glStyle, options)\n      .then(function (glStyle) {\n        if (glStyle.version != 8) {\n          return reject(new Error('glStyle version 8 required.'));\n        }\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          return reject(\n            new Error('Can only apply to VectorLayer or VectorTileLayer')\n          );\n        }\n\n        const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n        if (!sourceOrLayers) {\n          sourceId = Object.keys(glStyle.sources).find(function (key) {\n            return glStyle.sources[key].type === type;\n          });\n          sourceOrLayers = sourceId;\n        } else if (Array.isArray(sourceOrLayers)) {\n          sourceId = glStyle.layers.find(function (layer) {\n            return layer.id === sourceOrLayers[0];\n          }).source;\n        } else {\n          sourceId = sourceOrLayers;\n        }\n        if (!sourceId) {\n          return reject(new Error(`No ${type} source found in the glStyle.`));\n        }\n\n        function assignSource() {\n          if (!updateSource) {\n            return Promise.resolve();\n          }\n          if (layer instanceof VectorTileLayer) {\n            return setupVectorSource(\n              glStyle.sources[sourceId],\n              styleUrl,\n              options\n            ).then(function (source) {\n              const targetSource = layer.getSource();\n              if (!targetSource) {\n                layer.setSource(source);\n              } else if (source !== targetSource) {\n                targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                if (\n                  typeof targetSource.setUrls === 'function' &&\n                  typeof source.getUrls === 'function'\n                ) {\n                  // to get correct keys for tile cache and queue\n                  targetSource.setUrls(source.getUrls());\n                }\n                //@ts-ignore\n                if (!targetSource.format_) {\n                  //@ts-ignore\n                  targetSource.format_ = source.format_;\n                }\n                if (!targetSource.getAttributions()) {\n                  targetSource.setAttributions(source.getAttributions());\n                }\n                if (\n                  targetSource.getTileLoadFunction() === defaultLoadFunction\n                ) {\n                  targetSource.setTileLoadFunction(\n                    source.getTileLoadFunction()\n                  );\n                }\n                if (\n                  equivalent(\n                    targetSource.getProjection(),\n                    source.getProjection()\n                  )\n                ) {\n                  targetSource.tileGrid = source.getTileGrid();\n                }\n              }\n              if (\n                !isFinite(layer.getMaxResolution()) &&\n                !isFinite(layer.getMinZoom())\n              ) {\n                const tileGrid = layer.getSource().getTileGrid();\n                layer.setMaxResolution(\n                  tileGrid.getResolution(tileGrid.getMinZoom())\n                );\n              }\n            });\n          }\n          const glSource = glStyle.sources[sourceId];\n          let source = layer.getSource();\n          if (!source || source.get('mapbox-source') !== glSource) {\n            source = setupGeoJSONSource(glSource, styleUrl, options);\n          }\n          const targetSource = /** @type {VectorSource} */ (layer.getSource());\n          if (!targetSource) {\n            layer.setSource(source);\n          } else if (source !== targetSource) {\n            if (!targetSource.getAttributions()) {\n              targetSource.setAttributions(source.getAttributions());\n            }\n            //@ts-ignore\n            if (!targetSource.format_) {\n              //@ts-ignore\n              targetSource.format_ = source.getFormat();\n            }\n            //@ts-ignore\n            targetSource.url_ = source.getUrl();\n          }\n          return Promise.resolve();\n        }\n\n        let spriteScale, spriteData, spriteImageUrl, style;\n        function onChange() {\n          if (!style && (!glStyle.sprite || spriteData)) {\n            if (options.projection && !resolutions) {\n              const projection = getProjection(options.projection);\n              const units = projection.getUnits();\n              if (units !== 'm') {\n                resolutions = defaultResolutions.map(\n                  (resolution) => resolution / METERS_PER_UNIT[units]\n                );\n              }\n            }\n            style = applyStyleFunction(\n              layer,\n              glStyle,\n              sourceOrLayers,\n              resolutions,\n              spriteData,\n              spriteImageUrl,\n              getFonts,\n              options.getImage\n            );\n            if (!layer.getStyle()) {\n              reject(new Error(`Nothing to show for source [${sourceId}]`));\n            } else {\n              assignSource().then(resolve).catch(reject);\n            }\n          } else if (style) {\n            layer.setStyle(style);\n            assignSource().then(resolve).catch(reject);\n          } else {\n            reject(new Error('Something went wrong trying to apply style.'));\n          }\n        }\n\n        if (glStyle.sprite) {\n          const sprite = new URL(\n            normalizeSpriteUrl(\n              glStyle.sprite,\n              options.accessToken,\n              styleUrl || location.href\n            )\n          );\n          spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n          const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n          let spriteUrl =\n            sprite.origin +\n            sprite.pathname +\n            sizeFactor +\n            '.json' +\n            sprite.search;\n\n          new Promise(function (resolve, reject) {\n            fetchResource('Sprite', spriteUrl, options)\n              .then(resolve)\n              .catch(function (error) {\n                spriteUrl =\n                  sprite.origin + sprite.pathname + '.json' + sprite.search;\n                fetchResource('Sprite', spriteUrl, options)\n                  .then(resolve)\n                  .catch(reject);\n              });\n          })\n            .then(function (spritesJson) {\n              if (spritesJson === undefined) {\n                reject(new Error('No sprites found.'));\n              }\n              spriteData = spritesJson;\n              spriteImageUrl =\n                sprite.origin +\n                sprite.pathname +\n                sizeFactor +\n                '.png' +\n                sprite.search;\n              if (options.transformRequest) {\n                const transformed = options.transformRequest(\n                  spriteImageUrl,\n                  'SpriteImage'\n                );\n                if (transformed instanceof Request) {\n                  spriteImageUrl = encodeURI(transformed.url);\n                }\n              }\n              onChange();\n            })\n            .catch(function (err) {\n              reject(\n                new Error(\n                  `Sprites cannot be loaded: ${spriteUrl}: ${err.message}`\n                )\n              );\n            });\n        } else {\n          onChange();\n        }\n      })\n      .catch(reject);\n  });\n}\n\nconst emptyObj = {};\n\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n  glStyle.layers.some(function (layer) {\n    if (layer.type === 'background') {\n      if (mapOrLayer instanceof Layer) {\n        mapOrLayer.setBackground(function (resolution) {\n          return getBackgroundColor(layer, resolution, options, {});\n        });\n        return true;\n      }\n      if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n        mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n        return true;\n      }\n    }\n  });\n}\n\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nexport function applyBackground(mapOrLayer, glStyle, options = {}) {\n  return getGlStyle(glStyle, options).then(function (glStyle) {\n    setFirstBackground(mapOrLayer, glStyle, options);\n  });\n}\n\nfunction getSourceIdByRef(layers, ref) {\n  let sourceId;\n  layers.some(function (layer) {\n    if (layer.id == ref) {\n      sourceId = layer.source;\n      return true;\n    }\n  });\n  return sourceId;\n}\n\nfunction extentFromTileJSON(tileJSON, projection) {\n  const bounds = tileJSON.bounds;\n  if (bounds) {\n    const ll = fromLonLat([bounds[0], bounds[1]], projection);\n    const tr = fromLonLat([bounds[2], bounds[3]], projection);\n    return [ll[0], ll[1], tr[0], tr[1]];\n  }\n  return getProjection(projection).getExtent();\n}\n\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n  const tileJSONSource = new TileJSON({\n    tileJSON: tileJSON,\n    tileSize: glSource.tileSize || tileJSON.tileSize || 512,\n  });\n  const tileJSONDoc = tileJSONSource.getTileJSON();\n  const tileGrid = tileJSONSource.getTileGrid();\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const extent = extentFromTileJSON(tileJSONDoc, projection);\n  const projectionExtent = projection.getExtent();\n  const minZoom = tileJSONDoc.minzoom || 0;\n  const maxZoom = tileJSONDoc.maxzoom || 22;\n  /** @type {import(\"ol/source/VectorTile.js\").Options} */\n  const sourceOptions = {\n    attributions: tileJSONSource.getAttributions(),\n    projection: projection,\n    tileGrid: new TileGrid({\n      origin: projectionExtent\n        ? getTopLeft(projectionExtent)\n        : tileGrid.getOrigin(0),\n      extent: extent || tileGrid.getExtent(),\n      minZoom: minZoom,\n      resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(\n        0,\n        maxZoom + 1\n      ),\n      tileSize: tileGrid.getTileSize(0),\n    }),\n  };\n  if (Array.isArray(tileJSONDoc.tiles)) {\n    sourceOptions.urls = tileJSONDoc.tiles;\n  } else {\n    sourceOptions.url = tileJSONDoc.tiles;\n  }\n  return sourceOptions;\n}\n\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n  const background = {\n    id: glLayer.id,\n    type: glLayer.type,\n  };\n  const layout = glLayer.layout || {};\n  const paint = glLayer.paint || {};\n  background['paint'] = paint;\n  const zoom = getZoomForResolution(\n    resolution,\n    options.resolutions || defaultResolutions\n  );\n  let bg, opacity;\n  if (paint['background-color'] !== undefined) {\n    bg = getValue(\n      background,\n      'paint',\n      'background-color',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  if (paint['background-opacity'] !== undefined) {\n    opacity = getValue(\n      background,\n      'paint',\n      'background-opacity',\n      zoom,\n      emptyObj,\n      functionCache\n    );\n  }\n  return layout.visibility == 'none'\n    ? undefined\n    : _colorWithOpacity(bg, opacity);\n}\n\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n  const div = document.createElement('div');\n  div.className = 'ol-mapbox-style-background';\n  div.style.position = 'absolute';\n  div.style.width = '100%';\n  div.style.height = '100%';\n  return new Layer({\n    source: new Source({}),\n    render(frameState) {\n      const color = getBackgroundColor(\n        glLayer,\n        frameState.viewState.resolution,\n        options,\n        functionCache\n      );\n      div.style.backgroundColor = color;\n      return div;\n    },\n  });\n}\n\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nexport function setupVectorSource(glSource, styleUrl, options) {\n  return new Promise(function (resolve, reject) {\n    getTileJson(glSource, styleUrl, options)\n      .then(function (tileJSON) {\n        const sourceOptions = sourceOptionsFromTileJSON(\n          glSource,\n          tileJSON,\n          options\n        );\n        sourceOptions.format = new MVT();\n        resolve(new VectorTileSource(sourceOptions));\n      })\n      .catch(reject);\n  });\n}\n\nfunction setupVectorLayer(glSource, styleUrl, options) {\n  const layer = new VectorTileLayer({\n    declutter: true,\n    visible: false,\n  });\n  setupVectorSource(glSource, styleUrl, options)\n    .then(function (source) {\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\nfunction getBboxTemplate(projection) {\n  const projCode = projection ? projection.getCode() : 'EPSG:3857';\n  return `{bbox-${projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')}}`;\n}\n\nfunction setupRasterLayer(glSource, styleUrl, options) {\n  const layer = new TileLayer();\n  getTileJson(glSource, styleUrl, options)\n    .then(function (tileJson) {\n      const source = new TileJSON({\n        interpolate:\n          options.interpolate === undefined ? true : options.interpolate,\n        transition: 0,\n        crossOrigin: 'anonymous',\n        tileJSON: tileJson,\n      });\n      source.tileGrid = sourceOptionsFromTileJSON(\n        glSource,\n        tileJson,\n        options\n      ).tileGrid;\n      if (options.projection) {\n        //@ts-ignore\n        source.projection = getProjection(options.projection);\n      }\n      const getTileUrl = source.getTileUrlFunction();\n      source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n        const bboxTemplate = getBboxTemplate(projection);\n        let src = getTileUrl(tileCoord, pixelRatio, projection);\n        if (src.indexOf(bboxTemplate) != -1) {\n          const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n          src = src.replace(bboxTemplate, bbox.toString());\n        }\n        return src;\n      });\n      source.set('mapbox-source', glSource);\n      layer.setSource(source);\n    })\n    .catch(function (error) {\n      layer.setSource(undefined);\n    });\n  return layer;\n}\n\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n  const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n  /** @type {ImageLayer<Raster>} */\n  const layer = new ImageLayer({\n    source: new Raster({\n      operationType: 'image',\n      operation: hillshade,\n      sources: [tileLayer],\n    }),\n  });\n  return layer;\n}\n\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n  const geoJsonFormat = options.projection\n    ? new GeoJSON({dataProjection: options.projection})\n    : new GeoJSON();\n  const data = glSource.data;\n  const sourceOptions = {};\n  if (typeof data == 'string') {\n    let geoJsonUrl = normalizeSourceUrl(\n      data,\n      options.accessToken,\n      options.accessTokenParam || 'access_token',\n      styleUrl || location.href\n    );\n    if (options.transformRequest) {\n      const transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n      if (transformed instanceof Request) {\n        geoJsonUrl = decodeURI(transformed.url);\n      }\n    }\n    if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n      const extentUrl = (extent, resolution, projection) => {\n        const bboxTemplate = getBboxTemplate(projection);\n        return geoJsonUrl.replace(bboxTemplate, `${extent.join(',')}`);\n      };\n      const source = new VectorSource({\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n        url: extentUrl,\n        strategy: bboxStrategy,\n      });\n      source.set('mapbox-source', glSource);\n      return source;\n    }\n    return new VectorSource({\n      attributions: glSource.attribution,\n      format: geoJsonFormat,\n      url: geoJsonUrl,\n    });\n  }\n  sourceOptions.features = geoJsonFormat.readFeatures(data, {\n    featureProjection: getUserProjection() || 'EPSG:3857',\n  });\n\n  const source = new VectorSource(\n    Object.assign(\n      {\n        attributions: glSource.attribution,\n        format: geoJsonFormat,\n      },\n      sourceOptions\n    )\n  );\n  source.set('mapbox-source', glSource);\n  return source;\n}\n\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n  return new VectorLayer({\n    declutter: true,\n    source: setupGeoJSONSource(glSource, styleUrl, options),\n    visible: false,\n  });\n}\n\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n  let zoom = null;\n  return function (event) {\n    if (\n      glLayer.paint &&\n      'raster-opacity' in glLayer.paint &&\n      event.frameState.viewState.zoom !== zoom\n    ) {\n      zoom = event.frameState.viewState.zoom;\n      delete functionCache[glLayer.id];\n      updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n    }\n  };\n}\n\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n  const opacity = getValue(\n    glLayer,\n    'paint',\n    'raster-opacity',\n    zoom,\n    emptyObj,\n    functionCache\n  );\n  layer.setOpacity(opacity);\n}\n\nfunction manageVisibility(layer, mapOrGroup) {\n  function onChange() {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    if (!glStyle) {\n      return;\n    }\n    const mapboxLayers = derefLayers(glStyle.layers);\n    const layerMapboxLayerids = layer.get('mapbox-layers');\n    const visible = mapboxLayers\n      .filter(function (mapboxLayer) {\n        return layerMapboxLayerids.includes(mapboxLayer.id);\n      })\n      .some(function (mapboxLayer) {\n        return (\n          !mapboxLayer.layout ||\n          !mapboxLayer.layout.visibility ||\n          mapboxLayer.layout.visibility === 'visible'\n        );\n      });\n    if (layer.get('visible') !== visible) {\n      layer.setVisible(visible);\n    }\n  }\n  layer.on('change', onChange);\n  onChange();\n}\n\nexport function setupLayer(glStyle, styleUrl, glLayer, options) {\n  const functionCache = getFunctionCache(glStyle);\n  const glLayers = glStyle.layers;\n  const type = glLayer.type;\n\n  const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n  const glSource = glStyle.sources[id];\n  let layer;\n  if (type == 'background') {\n    layer = setupBackgroundLayer(glLayer, options, functionCache);\n  } else if (glSource.type == 'vector') {\n    layer = setupVectorLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster') {\n    layer = setupRasterLayer(glSource, styleUrl, options);\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n  } else if (glSource.type == 'geojson') {\n    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n  } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n    const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n    layer = hillshadeLayer;\n    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n      const data = event.data;\n      data.resolution = event.resolution;\n      const zoom = getZoomForResolution(\n        event.resolution,\n        options.resolutions || defaultResolutions\n      );\n      data.encoding = glSource.encoding;\n      data.vert =\n        5 *\n        getValue(\n          glLayer,\n          'paint',\n          'hillshade-exaggeration',\n          zoom,\n          emptyObj,\n          functionCache\n        );\n      data.sunAz = getValue(\n        glLayer,\n        'paint',\n        'hillshade-illumination-direction',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.sunEl = 35;\n      data.opacity = 0.3;\n      data.highlightColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-highlight-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.shadowColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-shadow-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n      data.accentColor = getValue(\n        glLayer,\n        'paint',\n        'hillshade-accent-color',\n        zoom,\n        emptyObj,\n        functionCache\n      );\n    });\n    layer.setVisible(\n      glLayer.layout ? glLayer.layout.visibility !== 'none' : true\n    );\n  }\n  const glSourceId = id;\n  if (layer) {\n    layer.set('mapbox-source', glSourceId);\n  }\n  return layer;\n}\n\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n  const promises = [];\n\n  let view = null;\n  if (mapOrGroup instanceof Map) {\n    view = mapOrGroup.getView();\n    if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n      const projection = options.projection\n        ? getProjection(options.projection)\n        : view.getProjection();\n      view = new View(\n        Object.assign(view.getProperties(), {\n          maxResolution:\n            defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n          projection: options.projection || view.getProjection(),\n        })\n      );\n      mapOrGroup.setView(view);\n    }\n\n    if ('center' in glStyle && !view.getCenter()) {\n      view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n    }\n    if ('zoom' in glStyle && view.getZoom() === undefined) {\n      view.setResolution(\n        defaultResolutions[0] /\n          METERS_PER_UNIT[view.getProjection().getUnits()] /\n          Math.pow(2, glStyle.zoom)\n      );\n    }\n    if (!view.getCenter() || view.getZoom() === undefined) {\n      view.fit(view.getProjection().getExtent(), {\n        nearest: true,\n        size: mapOrGroup.getSize(),\n      });\n    }\n  }\n  mapOrGroup.set('mapbox-style', glStyle);\n  mapOrGroup.set('mapbox-metadata', {styleUrl, options});\n\n  const glLayers = glStyle.layers;\n  let layerIds = [];\n\n  let layer, glSourceId, id;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    const type = glLayer.type;\n    if (type == 'heatmap') {\n      //FIXME Unsupported layer type\n      throw new Error(`${type} layers are not supported`);\n    } else {\n      id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n      // this technique assumes gl layers will be in a particular order\n      if (!id || id != glSourceId) {\n        if (layerIds.length) {\n          promises.push(\n            finalizeLayer(\n              layer,\n              layerIds,\n              glStyle,\n              styleUrl,\n              mapOrGroup,\n              options\n            )\n          );\n          layerIds = [];\n        }\n\n        layer = setupLayer(glStyle, styleUrl, glLayer, options);\n        if (\n          !(layer instanceof VectorLayer || layer instanceof VectorTileLayer)\n        ) {\n          layerIds = [];\n        }\n        glSourceId = layer.get('mapbox-source');\n      }\n      layerIds.push(glLayer.id);\n    }\n  }\n  promises.push(\n    finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options)\n  );\n  return Promise.all(promises);\n}\n\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nexport function apply(mapOrGroupOrElement, style, options = {}) {\n  let promise;\n  /** @type {Map|LayerGroup} */\n  let mapOrGroup;\n  if (\n    typeof mapOrGroupOrElement === 'string' ||\n    mapOrGroupOrElement instanceof HTMLElement\n  ) {\n    mapOrGroup = new Map({\n      target: mapOrGroupOrElement,\n    });\n  } else {\n    mapOrGroup = mapOrGroupOrElement;\n  }\n\n  if (typeof style === 'string') {\n    const styleUrl = style.startsWith('data:')\n      ? location.href\n      : normalizeStyleUrl(style, options.accessToken);\n    options = completeOptions(styleUrl, options);\n\n    promise = new Promise(function (resolve, reject) {\n      getGlStyle(style, options)\n        .then(function (glStyle) {\n          processStyle(glStyle, mapOrGroup, styleUrl, options)\n            .then(function () {\n              resolve(mapOrGroup);\n            })\n            .catch(reject);\n        })\n        .catch(function (err) {\n          reject(new Error(`Could not load ${style}: ${err.message}`));\n        });\n    });\n  } else {\n    promise = new Promise(function (resolve, reject) {\n      processStyle(\n        style,\n        mapOrGroup,\n        !options.styleUrl || options.styleUrl.startsWith('data:')\n          ? location.href\n          : normalizeStyleUrl(options.styleUrl, options.accessToken),\n        options\n      )\n        .then(function () {\n          resolve(mapOrGroup);\n        })\n        .catch(reject);\n    });\n  }\n\n  return promise;\n}\n\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nexport function finalizeLayer(\n  layer,\n  layerIds,\n  glStyle,\n  styleUrl,\n  mapOrGroup,\n  options = {}\n) {\n  let minZoom = 24;\n  let maxZoom = 0;\n  const glLayers = glStyle.layers;\n  for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n    const glLayer = glLayers[i];\n    if (layerIds.indexOf(glLayer.id) !== -1) {\n      minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n      maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n    }\n  }\n  return new Promise(function (resolve, reject) {\n    const setStyle = function () {\n      const source = layer.getSource();\n      if (!source || source.getState() === 'error') {\n        reject(\n          new Error(\n            'Error accessing data for source ' + layer.get('mapbox-source')\n          )\n        );\n        return;\n      }\n      if ('getTileGrid' in source) {\n        const tileGrid =\n          /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */ (\n            source\n          ).getTileGrid();\n        if (tileGrid) {\n          const sourceMinZoom = tileGrid.getMinZoom();\n          if (minZoom > 0 || sourceMinZoom > 0) {\n            layer.setMaxResolution(\n              Math.min(\n                defaultResolutions[minZoom],\n                tileGrid.getResolution(sourceMinZoom)\n              ) + 1e-9\n            );\n          }\n          if (maxZoom < 24) {\n            layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n          }\n        }\n      } else {\n        if (minZoom > 0) {\n          layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n        }\n      }\n      if (\n        source instanceof VectorSource ||\n        source instanceof VectorTileSource\n      ) {\n        applyStyle(\n          /** @type {import(\"ol/layer/Vector\").default|import(\"ol/layer/VectorTile\").default} */ (\n            layer\n          ),\n          glStyle,\n          layerIds,\n          Object.assign({styleUrl: styleUrl}, options)\n        )\n          .then(function () {\n            manageVisibility(layer, mapOrGroup);\n            resolve();\n          })\n          .catch(reject);\n      } else {\n        resolve();\n      }\n    };\n\n    layer.set('mapbox-layers', layerIds);\n    const layers = mapOrGroup.getLayers();\n    if (layers.getArray().indexOf(layer) === -1) {\n      layers.push(layer);\n    }\n\n    if (layer.getSource()) {\n      setStyle();\n    } else {\n      layer.once('change:source', setStyle);\n    }\n  });\n}\n\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nexport function getMapboxLayer(mapOrGroup, layerId) {\n  const style = mapOrGroup.get('mapbox-style');\n  const layerStyle = style.layers.find(function (layer) {\n    return layer.id === layerId;\n  });\n  return layerStyle;\n}\n\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nexport function addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  let spliceIndex;\n  let sourceIndex = -1;\n  if (beforeLayerId !== undefined) {\n    const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n    if (beforeMapboxLayer === undefined) {\n      throw new Error(`Layer with id \"${beforeLayerId}\" not found.`);\n    }\n    spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n  } else {\n    spliceIndex = mapboxLayers.length;\n  }\n  let sourceOffset;\n  if (\n    spliceIndex > 0 &&\n    mapboxLayers[spliceIndex - 1].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex - 1;\n    sourceOffset = -1;\n  } else if (\n    spliceIndex < mapboxLayers.length &&\n    mapboxLayers[spliceIndex].source === mapboxLayer.source\n  ) {\n    sourceIndex = spliceIndex;\n    sourceOffset = 0;\n  }\n  if (sourceIndex === -1) {\n    const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n    const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n    if (beforeLayerId) {\n      const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n      const beforeLayerIndex = mapOrGroup\n        .getLayers()\n        .getArray()\n        .indexOf(beforeLayer);\n      mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n    }\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    return finalizeLayer(\n      layer,\n      [mapboxLayer.id],\n      glStyle,\n      styleUrl,\n      mapOrGroup,\n      options\n    );\n  }\n\n  if (mapboxLayers.some((layer) => layer.id === mapboxLayer.id)) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" already exists.`);\n  }\n  const sourceLayerId = mapboxLayers[sourceIndex].id;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, sourceLayerId)\n      )\n    ];\n  mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n      sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n    }\n    applyStyleFunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n  }\n  return Promise.resolve();\n}\n\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nexport function updateMapboxLayer(mapOrGroup, mapboxLayer) {\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const mapboxLayers = glStyle.layers;\n  const index = mapboxLayers.findIndex(function (layer) {\n    return layer.id === mapboxLayer.id;\n  });\n  if (index === -1) {\n    throw new Error(`Layer with id \"${mapboxLayer.id}\" not found.`);\n  }\n  const oldLayer = mapboxLayers[index];\n  if (oldLayer.source !== mapboxLayer.source) {\n    throw new Error(\n      'Updated layer and previous version must use the same source.'\n    );\n  }\n  delete getFunctionCache(glStyle)[mapboxLayer.id];\n  delete getFilterCache(glStyle)[mapboxLayer.id];\n  mapboxLayers[index] = mapboxLayer;\n  const args =\n    styleFunctionArgs[\n      getStyleFunctionKey(\n        mapOrGroup.get('mapbox-style'),\n        getLayer(mapOrGroup, mapboxLayer.id)\n      )\n    ];\n  if (args) {\n    applyStylefunction.apply(undefined, args);\n  } else {\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n  }\n}\n\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nexport function removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n  const mapboxLayerId =\n    typeof mapboxLayerIdOrLayer === 'string'\n      ? mapboxLayerIdOrLayer\n      : mapboxLayerIdOrLayer.id;\n  const layer = getLayer(mapOrGroup, mapboxLayerId);\n  /** @type {Array<Object>} */\n  const layerMapboxLayers = layer.get('mapbox-layers');\n  if (layerMapboxLayers.length === 1) {\n    throw new Error(\n      'Cannot remove last Mapbox layer from an OpenLayers layer.'\n    );\n  }\n  layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n  const glStyle = mapOrGroup.get('mapbox-style');\n  const layers = glStyle.layers;\n  layers.splice(\n    layers.findIndex((layer) => layer.id === mapboxLayerId),\n    1\n  );\n  const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n  if (args) {\n    const [\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage,\n    ] = args;\n    if (Array.isArray(sourceOrLayers)) {\n      sourceOrLayers.splice(\n        sourceOrLayers.findIndex((layer) => layer === mapboxLayerId),\n        1\n      );\n    }\n    applyStylefunction(\n      olLayer,\n      glStyle,\n      sourceOrLayers,\n      resolutions,\n      spriteData,\n      spriteImageUrl,\n      getFonts,\n      getImage\n    );\n  } else {\n    getLayer(mapOrGroup, mapboxLayerId).changed();\n  }\n}\n\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nexport function getLayer(map, layerId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const mapboxLayers = layers[i].get('mapbox-layers');\n    if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n      return /** @type {Layer} */ (layers[i]);\n    }\n  }\n  return undefined;\n}\n\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nexport function getLayers(map, sourceId) {\n  const result = [];\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    if (layers[i].get('mapbox-source') === sourceId) {\n      result.push(/** @type {Layer} */ (layers[i]));\n    }\n  }\n  return result;\n}\n\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nexport function getSource(map, sourceId) {\n  const layers = map.getLayers().getArray();\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const source = /** @type {Layer} */ (layers[i]).getSource();\n    if (layers[i].get('mapbox-source') === sourceId) {\n      return source;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nexport function setFeatureState(mapOrLayer, feature, state) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState) {\n      if (state) {\n        featureState[feature.id] = state;\n      } else {\n        delete featureState[feature.id];\n      }\n      layers[i].changed();\n    } else {\n      throw new Error(`Map or layer for source \"${feature.source}\" not found.`);\n    }\n  }\n}\n\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nexport function getFeatureState(mapOrLayer, feature) {\n  const layers =\n    'getLayers' in mapOrLayer\n      ? getLayers(mapOrLayer, feature.source)\n      : [mapOrLayer];\n  for (let i = 0, ii = layers.length; i < ii; ++i) {\n    const featureState = layers[i].get('mapbox-featurestate');\n    if (featureState && featureState[feature.id]) {\n      return featureState[feature.id];\n    }\n  }\n  return undefined;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t592: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_mapbox_style\"] = self[\"webpackChunkol_mapbox_style\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));"],"names":["deferred","UnitBezier","p1x","p1y","p2x","p2y","this","cx","bx","ax","cy","by","ay","module","exports","prototype","sampleCurveX","t","sampleCurveY","sampleCurveDerivativeX","solveCurveX","x","epsilon","t0","t1","t2","x2","i","Math","abs","d2","solve","kCSSColorTable","clamp_css_byte","round","clamp_css_float","f","parse_css_int","str","length","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","css_str","iv","replace","toLowerCase","slice","substr","op","indexOf","ep","fname","params","split","alpha","pop","s","l","e","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","NaN","Infinity","pow","write","value","c","rt","isNaN","floor","log","LN2","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","black","fat","poster","sp","italicRE","fontCache","fonts","size","lineHeight","cssData","Array","isArray","weight","style","fontFamilies","ii","parts","maybeWeight","w","test","previousPart","startsWith","fontFamily","join","push","assert","err","AssertionError","Error","captureStackTrace","name","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","p","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","r","a","n","o","exp","u","sqrt","max","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","messages","constructor","code","message","super","Property","CollectionEvent","element","index","Collection","array","options","on","once","un","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","get","insertAt","elem","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","except","disposed","dispose","disposeInternal","ImageWrapper","extent","resolution","pixelRatio","stateOrLoader","pixelRatio_","state","IDLE","image_","loader","changed","CHANGE","getExtent","getImage","getPixelRatio","getResolution","getState","LOADING","requestResolution","then","image","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","LOADED","catch","error","ERROR","console","finally","setImage","setResolution","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","EMPTY","ImageTile","tileCoord","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","Image","unlisten_","tileLoadFunction_","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","managed","feature","layer","geometry","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","undefined","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","POSTCOMPOSE","layers","renderDeclutter","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","id","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","removeEventListener","Control","pointerEvents","target_","setTarget","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","PI","animate","easing","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroid","update","adjustCenterInternal","begin","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","getSize","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","pan","platformModifierKey","KEYPRESS","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","now","Date","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","dx","dy","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotate","rotateOptions","attribution","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","lastIndex","firstIndex","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","CollectionEventType","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","Composite","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","usedTiles","wantedTiles","mapId","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","getCount","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","setViewportSize","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","getProperties","assign","getPropertiesInternal","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","Observable","revision_","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","inTransition","endTransition","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","EventType","TileState","tileKey","newLoads","TileRange","containsXY","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","setCenterInternal","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","currentResolution","getCenter","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","userProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","binarySearch","haystack","needle","comparator","mid","cmp","ascending","found","linearFindNearest","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromString","cache","cacheSize","g","exec","el","body","rgb","fromNamed","hasAlpha","Number","normalize","fromStringInternal_","asArray","asColorLike","levels","info","warn","level","coordinate1","coordinate2","wrapX","worldsAway","sourceExtentWidth","getWorldsAway","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","variant","families","family","createCanvasContext2D","canvasPool","settings","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","easeIn","easeOut","inAndOut","linear","listen","originalListener","eventsKey","listenOnce","unlistenByKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","extendCoordinate","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getUnits","setWorldExtent","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","GeometryCollection","Geometry","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","closestPointXY","closestPoint","minSquaredDistance","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","intersectsExtent","sx","sy","translate","clonedGeometries","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","Point","readPointGeometry","LineString","readLineStringGeometry","readPolygonGeometry","MultiPoint","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","getCoordinates","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","TRUE","FALSE","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","Promise","reject","resolve","promiseGetter","tmpTransform","extent_","extentRevision_","simplifyTransformedInternal","revision","simplifyTransformed","coord","getClosestPoint","point","intersectsCoordinate","simplify","destination","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","flatMidpoint_","flatMidpointRevision_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","extrapolate","getCoordinateAt","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setLayout","ends","ends_","getLayout","lineStrings","appendLineString","multiLineString","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","appendPoint","multiPoint","squaredDistance","getPoint","getPoints","points","endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","getOrientedFlatCoordinates","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","LinearRing","SimpleGeometry","inflate","deflate","flatInteriorPointRevision_","flatInteriorPoint_","appendLinearRing","linearRing","orient","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","getFirstCoordinate","getLastCoordinate","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","getInteriorPointOfArray","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","interpolatePoint","dimension","cumulativeLengths","lineStringCoordinateAtM","lo","hi","m0","lineStringsCoordinateAtM","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","lineStringLength","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","quantizeMultiArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","LiteralExpression","CallExpression","operator","newParsingContext","variables","encoded","parser","parsers","parseCallExpression","Ops","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","createParser","withArgs","arg","operation","minArgs","maxArgs","argType","argCount","expression","gotType","expectedType","argValidator","returnType","buildExpression","expected","actual","compileExpression","compileAssertionExpression","nameExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","requireNumber","radius","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluator","requireSizeLike","BaseVectorLayer","baseOptions","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","rules","compiledRules","rule","styleLength","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","rulesToStyleFunction","toStyleLike","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","opacity_","renderWorlds","executorGroup","vectorSource","getLayer","snapToPixel","endWorld","world","getRenderTransform","execute","setupCompositionContext_","compositionContext","releaseCompositionContext_","globalAlpha","drawImage","pixelTransform","inversePixelTransform","canvasTransform","useContainer","replayGroup","PRERENDER","POSTRENDER","containerReused","preRender","clipped","clipUnrotated","restore","postRender","transforms","featureCallback","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","userTransform","userExtent","loadFeatures","styleFunction","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","builderGroup","VectorLayer","BaseVector","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","renderedLayerRevision_","renderedPixelToCoordinateTransform_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","getTile","hifi","wantedResolution","getRenderMode","renderTileImage_","isDrawableTile","hasContext","getTileImage","layerRevision","renderedTiles","builderState","getReplayState","renderedResolution","renderedRevision","renderedRenderOrder","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","tmpExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","tileGrid","hitExtent","declutteredFeatures","renderedProjection","getTileCoordForCoordAndResolution","loadingSourceTiles","tilePixel","reduce","accumulator","tileSize","getTileSize","getZForResolution","zDirection","getTileCoordCenter","tiles","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","clip","save","beginPath","moveTo","lineTo","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","getTilePixelSize","renderScale","setTransform","pixelScale","VectorTileLayer","preload","useInterimTilesOnError","renderMode_","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","bbox","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","units","global","worldExtent","getPointResolution","cosh","PROJECTIONS","EPSG4326Projection","axisOrientation","metersPerUnit","sourceCode","getCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","pointResolution","getPointResolutionFunc","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setGetPointResolution","METERS_PER_UNIT","RenderEvent","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","available","referenceFont","measureTextWidth","check","done","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","contextInstructions","executeLabelInstructions","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","CUSTOM","endGeometry","BEGIN_GEOMETRY","reverseHitDetectionInstructions","reverse","instruction","END_GEOMETRY","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","SET_FILL_STYLE","applyStroke","createStroke","SET_STROKE_STYLE","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","DRAW_IMAGE","sharedData","getAnchor","origin","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","MOVE_TO_LINE_TO","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CIRCLE","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","maxAngle","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","baseline","execute_","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","BEGIN_PATH","arc","CLOSE_PATH","closePath","rotateWithView","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","DRAW_CHARS","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","drawChars","cc","part","FILL","STROKE","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","executors","instructionByZindex","candidates","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","getImageData","idx","zs","executor","builderTypes","Instruction","beginPathInstruction","closePathInstruction","lineChunk","chunkLength","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","textStrokeState_","textState_","textKey_","fillKey_","strokeKey_","geometryType","beg","keep","saveTextStates_","p0","repeat","flatOffset","oo","chunk","chunkBegin","range","drawChars_","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","getOffsetX","getOffsetY","textRotateWithView","textRotation","getText","CanvasImmediateRenderer","VectorContext","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","createLoadedTileFinder","forEachLoadedTile","ImageState","loadImage","imageState","pixelContext","tempTransform","pixelContext_","col","row","backgroundColor","layerClassName","firstElementChild","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getGutterForProjection","viewResolution","viewCenter","sourceRevision","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","getOpaque","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","useTile","updateCacheSize","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","targetTileGrid","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","Event","VectorSource","loader_","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","calculateScale","wantedWidth","wantedHeight","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","origin_","initialOptions_","iconImageSize","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","ImageStyle","scaleArray_","displacement_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmp_","create","reset","multiply","transform1","transform2","a1","d1","e1","f1","a2","e2","f2","setFromArray","makeScale","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","ol_uid","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","static","rgba","toArray","toArray01","toArray01PremultipliedAlpha","white","transparent","red","blue","convertLiteral","getInterpolateOperator","parameters","colorSpace","getFallback","propertySpec","defaultValue","default","convertPropertyFunction","getFunctionType","stop","appendStopPair","fixupDegenerateStepCurve","base","curve","isStep","interpolated","convertTokenString","re","literal","ParsingError","Scope","bindings","has","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","itemType","N","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","sections","unformatted","section","serialize","serialized","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","types","string","number","boolean","Assertion","parsed","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","parseColor","child","geometryTypes","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","signature","signatureContext","registry","path","scope","parsedArgs","argParseFailed","errors","signatures","stringifySignature","actualTypes","CollatorExpression","updateBBox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","isStateConstant","isGlobalPropertyConstant","boundExpression","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","to","Xn","Zn","t3","deg2rad","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolation","lower","upper","exponentialInterpolation","controlPoints","rest","interpolationFactor","outputLower","outputUpper","lowerValue","upperValue","difference","Coalesce","needsAnnotation","firstImage","Let","binding","At","In","IndexOf","fromIndex","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","_","Slice","beginIndex","endIndex","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","register","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","StyleExpression","spec","_warningHistory","_evaluator","_defaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","zoomStops","interpolationType","createPropertyExpression","isFeatureConstant","isZoomConstant","zoomCurve","findZoomCurve","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","layerType","needGeometry","needFeature","isExpressionFilter","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","latest","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","convertComparisonOp","convertNegation","filters","convertInOp","convertHasOp","deref","derefLayers","ref","getKeyZXY","fromKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","startCharCode","stopCharCode","charCode","mapboxBaseUrl","getMapboxPath","normalizeStyleUrl","token","mapboxPath","decodeURI","URL","location","href","normalizeSourceUrl","tokenParam","styleUrl","urlObject","searchParams","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","functionCache","defaultResolutions","createCanvas","pendingRequests","fetchResource","resourceType","metadata","request","transformRequest","Request","headers","pendingRequest","fetch","response","ok","json","getGlStyle","glStyleOrUrl","trim","accessToken","getTransformedTilesUrl","tilesUrl","transformedRequest","tilejsonCache","getTileJson","glSource","cacheKey","promise","normalizedSourceUrl","accessTokenParam","tileJson","tileUrl","scheme","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","fontFamilyRegEx","stripQuotesRegEx","loadedFontFamilies","hasFontFamily","styleSheets","styleSheet","cssRules","cssRule","cssText","processedFontFamilies","getFonts","templateUrl","fontsKey","fontDescriptions","cssFont","fontDescription","fontUrl","querySelector","markup","rel","head","expressionData","rawExpression","compiledExpression","emptyObj","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","featureFunctionParameters","featureFunctionStops","convertZoomAndPropertyFunction","convertZoomFunction","convertFunction","getIconDeclutterMode","evaluateFilter","filterCache","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","version","spriteImageSize","spriteImageUnSDFed","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","pattern","createPattern","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","hasImage","placementAngle","styleGeom","imageElement","iconRotationAlignment","geom","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","fontArray","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","dw","dh","previousAlpha","BaseImage","featureClass_","featureClass","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","ctor","pbfLayers","layersPBFReader","pbfLayer","readRawFeature","layerPBFReader","featurePBFReader","ImageCanvas","error_","getError","handleLoad_","fromResolutionLike","ReprojImage","getImageFunction","Triangulation","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","setResolutions","findNearestResolution","getImageInternal","requestExtent","requestWidth","requestHeight","getRequestExtent","handleImageChange","BaseTileLayer","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","pruneExceptNewestZ","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","hasImageData","ImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","createWorker","config","onMessage","lib","Worker","Blob","Buffer","createObjectURL","Processor","threads","_imageOps","workers","_onWorkerMessage","minion","terminated","terminate","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","slices","_resolveJob","createImageData","newImageData","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","createLayer","createLayers","useResolutions_","processSources_","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","attributionGetter","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","tileJSON_","jsonp","errback","callbackParam","script","cleanup","async","timer","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","features_","onLoad","setFeatures","onError","VectorRenderTile","replayState_","errorTileKeys","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","sourceTileState","listenChange","sourceTileKey","coordKey","hillshade","elevationImage","elevationData","shadeData","dp","twoPi","halfPi","sunEl","sunAz","cosSunEl","sinSunEl","highlightColor","shadowColor","accentColor","encoding","pixelX","pixelY","z0","z1","dzdx","dzdy","aspect","accent","scaled","shade","scaledAccentColor","compositeShadeColor","slopeScaleBase","scaledSlope","cosIncidence","calculateElevation","vert","getTileResolutions","completeOptions","sourceOrLayersOrOptions","optionsOrPath","sourceId","updateSource","Vector","VectorTile","assignSource","setupVectorSource","targetSource","setupGeoJSONSource","spriteScale","onChange","sprite","normalizeSpriteUrl","sizeFactor","spriteUrl","pathname","spritesJson","encodeURI","mapOrLayer","getBackgroundColor","setupBackgroundLayer","setFirstBackground","getSourceIdByRef","sourceOptionsFromTileJSON","tileJSONSource","tileJSONDoc","bounds","tr","extentFromTileJSON","sourceOptions","glLayer","bg","div","getBboxTemplate","setupRasterLayer","getTileUrl","bboxTemplate","geoJsonFormat","GeoJSON","geoJsonUrl","extentUrl","setupLayer","glLayers","setupVectorLayer","updateRasterLayerProperties","prerenderRasterLayer","setupGeoJSONLayer","hillshadeLayer","Raster","setupHillshadeLayer","glSourceId","processStyle","mapOrGroup","promises","layerIds","finalizeLayer","mapOrGroupOrElement","HTMLElement","sourceMinZoom","layerMapboxLayerids","mapboxLayer","manageVisibility","setFeatureState","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","O","chunkIds","notFulfilled","fulfilled","enumerable","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}